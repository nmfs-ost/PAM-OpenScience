[
  {
    "objectID": "content/websiteBuild.html",
    "href": "content/websiteBuild.html",
    "title": "Use NOAA Website Template",
    "section": "",
    "text": "When building a repo where a website is the primary output, we recommend building from a template to ensure you are starting with a functional site to build on.\n\nUse NOAA Website Template\nGo to Website Repository on Github: https://github.com/nmfs-opensci/NOAA-quarto-simple\nFollow directions to use this as a template: https://nmfs-opensci.github.io/NOAA-quarto-simple/\n‚Äì&gt; Be sure to check the box to Include All Branches!\n‚Äì&gt; Save to your account (or to one of your organizations)"
  },
  {
    "objectID": "content/PAM-SI-Mtg-Prep.html",
    "href": "content/PAM-SI-Mtg-Prep.html",
    "title": "Prep for PAM-SI Meeting",
    "section": "",
    "text": "The tasks outlined below will help us practice working together with a shared Github Repository for the PAM-SI Meeting."
  },
  {
    "objectID": "content/PAM-SI-Mtg-Prep.html#preparation-for-the-pam-si-meeting",
    "href": "content/PAM-SI-Mtg-Prep.html#preparation-for-the-pam-si-meeting",
    "title": "Prep for PAM-SI Meeting",
    "section": "",
    "text": "The tasks outlined below will help us practice working together with a shared Github Repository for the PAM-SI Meeting."
  },
  {
    "objectID": "content/PAM-SI-Mtg-Prep.html#tasks-that-must-be-completed-by-all-participants-prior-to-the-pam-si-meeting",
    "href": "content/PAM-SI-Mtg-Prep.html#tasks-that-must-be-completed-by-all-participants-prior-to-the-pam-si-meeting",
    "title": "Prep for PAM-SI Meeting",
    "section": "Tasks that MUST be completed by ALL participants prior to the PAM-SI Meeting",
    "text": "Tasks that MUST be completed by ALL participants prior to the PAM-SI Meeting\n\nAdd Software Tools to your computer:\n\nGithub Desktop\n\nSign User Agreement (see NOAA Github Governance Team for more information)\nSEFSC specific user agreement; NEFSC specific user agreement\n\nRStudio (v2022.07.2 build 576 or later)\nR\nZotero\nCreate a Github Account\n\nRequest to join the PAM-SI Meeting Repository\n\nGo to the PAM-SI Meeting Github Repository (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024)\nCreate an Issue to request to join the repository.\n\nSelect ‚äô Issue (issue button) at the upper left, below the repository name, and to the right of the &lt;&gt;Code button\nSelect New Issue (green button to right) - Title = ‚ÄúAdd me to Repository‚Äù, and in the Description, give your name, email, and Github name.\nclick ‚ÄòSubmit New Issue‚Äô. I will add you to the repository as soon as I am able. Please ensure that you have your notifications set so that you will receive an email when you have been added, or when you are tagged in that repository.\n\nWhen you have been added to the repository, go to the next step\n\nClone PAM-SI Meeting Repository to your local computer using Github Desktop:\n\nOpen Github Desktop on the computer you will be bringing to the workshop\nFile -&gt; Clone Repository -&gt; URL\nPaste in the URL for the PAM-SI Meeting Repo (provide link here). Save to your Documents -&gt; Github folder using the defaults. It is highly recommended that you save Github Repository/RStudio Projects to these default locations (and for these instructions, we assume you will!). See Introduction to Git/Github tutorial for more help.\n\nCreate/Open project in RStudio.\n\nOpen RStudio\nIn the upper right hand corner of RStudio, select ‚ÄòNew Project‚Äô in the drop-down menu\n\nAdd a new R Project from an Existing Project. Browse to find the appropriate folder in Documents-&gt; Github. Note: Anytime you want to navigate to this project in RStudio, you can select it from the dropdown in this top right corner. If you want to use a new computer, you will need to repeat the steps of cloning the repository using Github Desktop, then creating a new project in RStudio.\n\n\nModify Document (Under Construction)\n\nIf you just opened RStudio, then in the lower right section of RStudio, navigate to ‚ÄòFiles‚Äô, open the ‚ÄòPAM-SI-Mtg-March2024‚Äô folder, and open the ‚ÄòPAM-SI-Mtg-March2024.Rproj‚Äô.\nIn the upper right section of RStudio, nagivate to ‚ÄòGit‚Äô and select ‚ÄòPull‚Äô. This will sync your local project with the updated repository on Github.\nIn the lower right section of RStudio, navigate to ‚ÄòFiles‚Äô and open the ‚ÄòContent‚Äô folder. Find and Open the ‚ÄòAttendeeIntros.qmd‚Äô file in RStudio (insert Screenshot)\nIn the newer RStudio, you can use the Quarto Visual Editor to modify documents. Please navigate to the ‚ÄòVisual‚Äô editor (insert screenshot) to make modifications.\nAdd your name in BOLD, your affiliation in Italics, with a link to your lab or personal website, insert a picture of you, give a one sentence explanation of the work you do with NOAA Fisheries.\nSave the document\n\nCommit & Push to Github.\n\nOpen your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary).\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nWe will adopt this process as our daily habit of working on your projects locally and saving your data to Github. We will go through this process to actively work on the Meeting Report together, during the meeting. Our goal is to have it almost entirely finished by the end of the meeting!"
  },
  {
    "objectID": "content/organization.html",
    "href": "content/organization.html",
    "title": "Github Organization",
    "section": "",
    "text": "Learn how to organize teams, projects, and communication within Github.\n\nGithub Teams & Organizations\nGithub Projects\nGithub Discussions",
    "crumbs": [
      "Team Organization"
    ]
  },
  {
    "objectID": "content/Mtg-Old/acknowledgements.html",
    "href": "content/Mtg-Old/acknowledgements.html",
    "title": "Acknowledgments",
    "section": "",
    "text": "This repo and GitHub Action was based on the tutorial by Openscapes quarto-website-tutorial by Julia Lowndes and Stefanie Butland."
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Authors.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Authors.html",
    "title": "Add Authors",
    "section": "",
    "text": "Exercise: Add preliminary authors to the report document.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nFind list of Authors\n\nNavigate to üìÅinfo folder and Open PAM SI Proposal Revised Sept 18, 2023.docx\nThe list of Primary authors is at the top of this document.\n\n\n\nAdd Authors to yaml\n\nNavigate to root directory (PAM-SI-Mtg-March2024 folder)\nOpen _quarto.yaml file\nAdd Authors\n\nscroll down to section with ‚Äòauthor:‚Äô and look at the formatting. YAML files are extremely picky about formatting, including exact spacing of elements. It is best to copy a complete section and paste so that all indentations are exact. Do NOT use tab (only spaces) to move items.\nAdd Authors. For each author, do the following:\n\nAdd name (First Last, as in example on yaml)\nAdd email (lookup or ask them)\nAdd Affiliation info (lookup or ask them).\n\nCheck yaml formatting\n\nOpen an online yaml checker (yamlchecker.com or onlineyamltools.com)\nCopy/paste the yaml you wrote into the checker\nIdentify/Address any errors\nRepeat until yaml checker does not return any errors.\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Authors‚Äù and in details, state ‚ÄúAdded authors and affiliations into the _quarto.yml‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Acknowledge.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Acknowledge.html",
    "title": "Acknowledgements Text",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Acknowledgements.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nQuery Attendees using Github Discussions\n\nGo to PAM-SI-Mtg-March2024 Github Repository and Navigate to Discussions (here).\nClick on üôèQ&A, click on ‚ÄòNew Discussion‚Äô with title ‚ÄúRequest List of Acknowledgements‚Äô and ask everyone to list any acknowledgements, including people and institutions who helped make this meeting happen.\n\n\n\nCreate Acknowledgements file\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, select New Blank File -&gt; Quarto Doc, Name ‚ÄúAcknowledgements.qmd‚Äù\nOpen Acknowledgements.qmd and set to Visual Editor\n\n\n\n\nEdit Acknowledgements file\n\nAdd draft text for Acknowledgements based on feedback from everyone.\nInclude names of all participants (we can remove authors at a later time).\nFormat Acknowledgements.qmd\n\nPlace cursor at top of Intro.qmd page, and navigate to Visual Editor tool bar. Using the drop-down menu, change ‚ÄòNormal‚Äô to ‚ÄòHeader 1‚Äô.\nType ‚ÄòAcknowledgements‚Äô at top of page.\n\nLink Acknowledgements.qmd to Report\n\nOpen the _quarto.yml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- content/Acknowledgements.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Acknowledgements‚Äù and in details, state ‚ÄúAdded draft acknowledgements text‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Soundscape.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Soundscape.html",
    "title": "Soundscape Section",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and Edit File\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, click on box to left of ‚ÄúPAM-SI-Mtg-Exercises-template.qmd‚Äù\nClick on ‚öôÔ∏èMore dropdown, then select Copy and save as ‚ÄúPAM-SI-Mtg-Exercises-Soundscape.qmd‚Äù\n\nInsert Table for Data types and Availability\n\nInsert Table: In Visual Editor, select the Table dropdown menu to insert a table with 5 rows and 3 columns. Enter ‚ÄúList of data types needed to expand sound metric research questions‚Äô in the Caption.\nAdd ‚ÄúData type‚Äù, ‚ÄúAdditional Questions‚Äù, and ‚ÄúData Availability‚Äù as the three column headers.\n\nModify document\n\nAt top, where it says ‚ÄòChapter Template‚Äô, replace with ‚ÄúSoundscape Tools, Metrics, Analyses‚Äù\nIn Project Team Table, add in names of Section Leads in the ‚ÄòName of Lead‚Äô cells (you can get the name of the section leads from the Agenda)\nSave the document\n\nLink PAM-SI-Mtg-Exercises-Soundscape.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/PAM-SI-Mtg-Exercises-Soundscape.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Soundscape Section‚Äù and in details, state ‚ÄúAdded draft summary for Soundscape Workshop Section‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Detection.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Detection.html",
    "title": "Detection Section",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and Edit File\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, click on box to left of ‚ÄúPAM-SI-Mtg-Exercises-template.qmd‚Äù\nClick on ‚öôÔ∏èMore dropdown, then select Copy and save as ‚ÄúPAM-SI-Mtg-Exercises-Detection.qmd‚Äù\n\nModify document\n\nAt top, where it says ‚ÄòChapter Template‚Äô, replace with ‚ÄúAcoustic Detection Software‚Äù\nIn Project Team Table, add in names of Section Leads in the ‚ÄòName of Lead‚Äô cells (you can get the name of the section leads from the Agenda)\nSave the document\n\nLink PAM-SI-Mtg-Exercises-Detection.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/PAM-SI-Mtg-Exercises-Detection.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Detection Section‚Äù and in details, state ‚ÄúAdded draft summary for Detection Workshop Section‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-References.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-References.html",
    "title": "References",
    "section": "",
    "text": "Exercise: Create a bibliography for the Report based on the shared group Zotero bibliography.\nZotero is an open-source online reference manager, where references can be readily saved from Google scholar using a browser plugin.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nShortcut for PAM-SI Meeting\nGet started:\n\nLoad Zotero and create a login.\nJoin the NMFS-PAM Group\n\nFind your favorite publication and add it to the NMFS-PAM library\n\nCreate a browser plugin so that you can directly save google scholar citations to your online reference list.\nAdd via Google Scholar\n\nFind article on Google Scholar, click on double quotes at bottom of citation\nSelect ‚ÄòRefMan‚Äô and OK to save to Zotero\nAdd citation to the NMFS-PAM group\n\n\nUpdate Bibliography for Meeting Report\n\nOpen Zotero on your desktop, export library, replace the existing bibliography in the local folder\nUsing Github Desktop, push changes back to Github\n\nInsert Citation into text\n\nFind the appropriate document in the Repository, find the location within the document where you want to add the citation\nStart by writing @ symbol, which should pull up a list of bibliographic references. Search for yours, and select it.\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Intro‚Äù and in details, state ‚ÄúAdded draft introduction text and diagram based on PAM-SI Vision and Proposal‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-MeetingNotes.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-MeetingNotes.html",
    "title": "Meeting Notes",
    "section": "",
    "text": "We will work as a team to work on meeting notes using Google Docs (google docs is easier for synchronous collaboration!).\nAfter the meeting, the final meeting notes will be saved in the PAM-SI Meeting Repository\n\nMeeting Notes Exercise\nPractice collaborating on meeting notes The purpose of this exercise is to get everyone involved in developing the meeting notes, and to engage in a few tips and tricks to make this process useful.\n\nOpen the Meeting Notes in Google Docs\nTips for Team Google Docs\n\nNewer Information on Top! (so we don‚Äôt have to scroll and scroll to get to new info!)\nIf you like someone else‚Äôs comment, put a +1 next to it (if there‚Äôs already a +1, add another! +1 +1 +1)!!!\nAdd Links, Screenshots, Emojis, etc\nDuring sessions, write notes, questions, comments in that section.\nHave a short question, idea, or discussion point, but don‚Äôt want to interrupt? Put it here! Have an answer? Provide it!\nIf it turns out to be worthy of a larger response, then move it to Github Discussions (see more, below)\n\n\nUltimately, we ALL share in meeting notes, so that all ideas, questions, comments, etc are included in the notes.\n\n\nGithub Discussions\nUse Github Discussions for broad discussions across entire team. Meeting Github Discussions link here.\nüì£ Announcements\nüí° Ideas\nüó≥Ô∏è Polls\nüôè Q&A\nüôå Show and Tell"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Github.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Github.html",
    "title": "Github Section",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and Edit File\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, click on box to left of ‚ÄúPAM-SI-Mtg-Exercises-template.qmd‚Äù\nClick on ‚öôÔ∏èMore dropdown, then select Copy and save as ‚ÄúPAM-SI-Mtg-Exercises-Github.qmd‚Äù\n\nInsert Table for Tools/Software/Detectors to consider\n\nInsert Table: In Visual Editor, select the Table dropdown menu to insert a table with 10 rows and 3 columns. Enter ‚ÄúList of Potential Github Uses for PAM‚Äô in the Caption.\nFill out the first column of the table with the preliminary list identified in the Template Workshop Report- PAM SI Workshop google document, under PAM Github Section (link here). Add more rows if necessary.\n\nModify document\n\nAt top, where it says ‚ÄòChapter Template‚Äô, replace with ‚ÄúPAM Github‚Äù\nIn Project Team Table, add in names of Section Leads in the ‚ÄòName of Lead‚Äô cells (you can get the name of the section leads from the Agenda)\nSave the document\n\nLink PAM-SI-Mtg-Exercises-Github.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/PAM-SI-Mtg-Exercises-Github.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Github Section‚Äù and in details, state ‚ÄúAdded draft summary for Github Workshop Section‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/add-content.html",
    "href": "content/Mtg-Old/add-content.html",
    "title": "Customize",
    "section": "",
    "text": "Edit the qmd or md files in the content folder. qmd files can include code (R, Python, Julia) and lots of Quarto markdown bells and whistles (like call-outs, cross-references, auto-citations and much more).\nEach page should start with\n---\ntitle: your title\n---\nand the first header will be the 2nd level, so ##. Note, there are situations where you leave off\n---\ntitle: your title\n---\nand start the qmd file with a level header #, but if using the default title yaml (in the --- fence) is a good habit since it makes it easy for Quarto convert your qmd file to other formats (like into a presentation)."
  },
  {
    "objectID": "content/Mtg-Old/add-content.html#edit-and-add-your-pages",
    "href": "content/Mtg-Old/add-content.html#edit-and-add-your-pages",
    "title": "Customize",
    "section": "",
    "text": "Edit the qmd or md files in the content folder. qmd files can include code (R, Python, Julia) and lots of Quarto markdown bells and whistles (like call-outs, cross-references, auto-citations and much more).\nEach page should start with\n---\ntitle: your title\n---\nand the first header will be the 2nd level, so ##. Note, there are situations where you leave off\n---\ntitle: your title\n---\nand start the qmd file with a level header #, but if using the default title yaml (in the --- fence) is a good habit since it makes it easy for Quarto convert your qmd file to other formats (like into a presentation)."
  },
  {
    "objectID": "content/Mtg-Old/add-content.html#add-your-pages-the-project",
    "href": "content/Mtg-Old/add-content.html#add-your-pages-the-project",
    "title": "Customize",
    "section": "Add your pages the project",
    "text": "Add your pages the project\n\nAdd the files to _quarto.yml"
  },
  {
    "objectID": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step4.html",
    "href": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step4.html",
    "title": "4. Update your Bio",
    "section": "",
    "text": "You can now test working on this project on your local computer and pushing changes to the shared repository. As an example, we‚Äôll ask everyone to add information about YOU.\n\nModify Document (Under Construction)\n\nIn the lower right section of RStudio, navigate to ‚ÄòFiles‚Äô and ‚Äòtext‚Äô. Find and Open the ‚ÄòAttendeeIntros.qmd‚Äô file in RStudio\n\nIn newer RStudio versions, you can use the Quarto Visual Editor to modify documents. Please navigate to the ‚ÄòVisual‚Äô editor to make modifications.\n\nSelect a picture of yourself to insert. You can either save the URL of an online image, or save a copy of the image to the following folder: PAM-SI-Mtg-March2024/text/images.\n\nClick on the Picture Icon in the Visual Editor Toolbar\n\nProvide the URL or browse to your saved image\n\nSelect ‚ÄòHeader 3‚Äô in Toolbar dropdown (default is ‚ÄòNormal‚Äô), then Type your Name and Institution and put your Institution in Italics (select and use the Italics button in toolbar). Put a link to your Institution or personal website using the üîó link button in the toolbar.\nOn the next line, type a few sentences about yourself.\nSave the document\n\nCommit & Push to Github.\n\nOpen your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary).\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Bio‚Äù with details ‚ÄúAdded my bio to AttendeeIntros.qmd for pre-meeting preparation‚Äù\n\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\n\nRender Fail Email‚Äì if you get an email that looks like the image below, and says that your Render and Publish failed‚Äì do not fret!!! There is an issue unrelated to your updates and we will resolve this issue at a future time. If you want to double-check your work, you can go to Github Repository, select ‚ÄúFetch Origin‚Äù (top right), and then open the project in RStudio, navigate to the docs folder and open the file named ‚ÄúFirst-Passive-Acoustic-Monitoring-Strategic-Initiative-Workshop-Report.docx‚Äù\n\nMake it a Habit! We will adopt this process as our daily habit of working on your projects locally and saving your data to Github. We will go through this process to actively work on the Meeting Report together, during the meeting. Our goal is to have it almost entirely finished by the end of the meeting!"
  },
  {
    "objectID": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step2.html",
    "href": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step2.html",
    "title": "2. Request to Join Repository",
    "section": "",
    "text": "Request to join the PAM-SI Meeting Repository\n\nGo to the PAM-SI Meeting Github Repository (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024)\nCreate an Issue to request to join the repository.\n\nSelect ‚äô Issue (issue button) at the upper left, below the repository name, and to the right of the &lt;&gt;Code button\nSelect New Issue (green button to right) - Title = ‚ÄúAdd me to Repository‚Äù, and in the Description, give your name, email, Github name, and add ‚Äò@shannonrankin, @rebecca-vanhoeck, and @Kourtney-Burger‚Äô to notify one of us to add you\nClick ‚ÄòSubmit New Issue‚Äô\nI will add you to the repository as soon as I am able. Please ensure that you have your notifications set so that you will receive an email when you have been added, or when you are tagged in that repository.\n\nWhen you have been added to the repository, go to the next step"
  },
  {
    "objectID": "content/coworking.html",
    "href": "content/coworking.html",
    "title": "Co-Working",
    "section": "",
    "text": "Under Construction\nGoal: Introduce tips & tricks for co-working to work together through some of the lonely parts of research!",
    "crumbs": [
      "Co-Working"
    ]
  },
  {
    "objectID": "content/createContent.html",
    "href": "content/createContent.html",
    "title": "Create Content",
    "section": "",
    "text": "You can customize your content by (1) Modifying existing content, or (2) creating your own content. For examples, we will assume a folder structure such as that in the PAM Template Lab Manual.",
    "crumbs": [
      "Lab Manual",
      "Create Content"
    ]
  },
  {
    "objectID": "content/createContent.html#modify-existing-content",
    "href": "content/createContent.html#modify-existing-content",
    "title": "Create Content",
    "section": "Modify Existing Content",
    "text": "Modify Existing Content\nHere are basic instructions for modifying existing content, such as the example pages provided in the PAM Template Lab Manual: 1) Ensure that you have cloned the Github Repository using Github Desktop, and that you have created an RStudio project, following directions outlined here.\n\nOpen your RStudio project (here we will assume it is a clone of the PAM Template Lab Manual), and navigate to the ‚Äòcontent‚Äô folder (lower right hand side of RStudio, Files Tab). As an example, we will change the ‚Äú/content/Hardware.qmd‚Äù file. First, read the information in the page to understand the intended content. To start, we will organize different subheadings within this page.\nIdentify Sub-Headings. In this example, we will want to identify different types of Hardware used by our particular lab. In this example, we will want the following categories: ‚ÄúPAM Gliders‚Äù, ‚ÄúDrifting Recorders‚Äù, ‚ÄúTowed Arrays‚Äù, and ‚ÄúHandheld Hydrophones‚Äù.\n\nUsing the Source editor, use # to indicate Heading 1 style, ## for Heading 2 Style, etc.\nUsing the Visual editor, use the dropdown menu to select the Heading Style\n\nAdd Content using either the Source or Visual editor in RStudio. Most content will consist of text, with some images, hyperlinks, and occasional tables. To start, we recommend identifying the content you would like to put in there, and identify the Point of Contact (POC). As an example, we may put the following text:\nPOC: Jane Doe. General description of Hardware, links to online content (vendor specification page, relevant online content), instructions for build or maintain hardware (or links to that information), links to inventory, etc.\nOnce your outline is developed, fill in the content. IF someone else will collate the content‚Äì they can create it in a separate document to be copied/pasted here, or they can directly modify this page.\nIf you find you need separate pages for each sub-heading (instead of one long subheading), then create New Content, and link the new content to the _quarto.yml.",
    "crumbs": [
      "Lab Manual",
      "Create Content"
    ]
  },
  {
    "objectID": "content/createContent.html#create-new-content",
    "href": "content/createContent.html#create-new-content",
    "title": "Create Content",
    "section": "Create New Content",
    "text": "Create New Content\nAgain, assuming you have an RStudio project for your Github Repository, such as the example provided in the PAM Template Lab Manual: 1) Ensure that you have cloned the Github Repository using Github Desktop, and that you have created an RStudio project, following directions outlined here.\n\nOpen your RStudio project (here we will assume it is a clone of the PAM Template Lab Manual), and navigate to the ‚Äòcontent‚Äô folder (lower right hand side of RStudio, Files Tab). Select New Blank File, and in the drop-down, select Quarto Document. Then give your file a logical and descriptive name.\n\nUsing the Source editor, create a title header with the text you would like as your primary Header for this page (will appear as Header 1).\n\nAdd Content using either the Source or Visual editor in RStudio.. Most content will consist of text, with some images, hyperlinks, and occasional tables. To start, we recommend identifying the content you would like to put in there, and identify the Point of Contact (POC). As an example, we may put the following text:\nPOC: Jane Doe. General description of Hardware, links to online content (vendor specification page, relevant online content), instructions for build or maintain hardware (or links to that information), links to inventory, etc.",
    "crumbs": [
      "Lab Manual",
      "Create Content"
    ]
  },
  {
    "objectID": "content/createContent.html#render-and-save",
    "href": "content/createContent.html#render-and-save",
    "title": "Create Content",
    "section": "Render and Save",
    "text": "Render and Save\nTo ensure your project will be saved correctly, you will need to double-check that your yaml is correct, render locally, then push to github.\n\nCheck YAML. Open your yaml, and ensure that all chapter pages exist at qmd documents in the content folder. If there are any that are not created yet (but you want to save the structure), then comment them out in the yaml (select those lines and click Command+Shift+C). Then, copy/paste entire yaml into a yamlchecker to ensure proper indentation/spacing.\nRender Locally. In RStudio, go to the index.qmd and click on the ‚ÄòRender‚Äô button (alternatively, in the Terminal window (bottom left), type ‚Äòquarto render‚Äô). Hopefully it will render to an HTML (open as a local website), and you can view your changes. If there are errors, you can navigate to the ‚ÄúBackground Jobs‚Äù to identify the errors.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nNote: The HTML output is saved in the _site folder. To view the HTML, you can open the index.html in this folder.\n\n\n\nOnce you have addressed any errors and you are happy with the changes, save in RStudio, and Commit changes and push to github using the directions outlined in Commit & Push to Github section.",
    "crumbs": [
      "Lab Manual",
      "Create Content"
    ]
  },
  {
    "objectID": "content/createContent.html#examples",
    "href": "content/createContent.html#examples",
    "title": "Create Content",
    "section": "Examples",
    "text": "Examples\nLooking at other people‚Äôs Quarto code is a great way to figure out how to do stuff. Most will have a link to a GitHub repo where you can see the raw code. Look for a link to edit page or see source code. This will usually be on the right. Or look for the GitHub icon somewhere.\n\nQuarto gallery\nnmfs-openscapes\nFaye lab manual\nquarto-titlepages Note the link to edit is broken. Go to repo and look in documentation directory.",
    "crumbs": [
      "Lab Manual",
      "Create Content"
    ]
  },
  {
    "objectID": "content/createContent.html#resources",
    "href": "content/createContent.html#resources",
    "title": "Create Content",
    "section": "Resources",
    "text": "Resources\n\nQuarto documentation.",
    "crumbs": [
      "Lab Manual",
      "Create Content"
    ]
  },
  {
    "objectID": "content/Stack-Exchange.html#bioacoustics-stack-exchange",
    "href": "content/Stack-Exchange.html#bioacoustics-stack-exchange",
    "title": "Stack Exchange",
    "section": "Bioacoustics Stack Exchange",
    "text": "Bioacoustics Stack Exchange\nStack Exchange is a publicly available crowd-sourced question and answer platform. Stack Exchange consists of many sites on different topics, including the original Stack Overflow (for programming questions), Biology, and even Bioacoustics. You can consider Stack Exchange as an Open Science platform for sharing knowledge.\nThe Bioacoustics Stack Exchange (BSE) is a question and answer site for people interested in the studies of non-human animal sounds and the impacts of sounds on animals. If you have a question- or if someone asks YOU a question‚Äì consider asking these questions here. This information is publicly available and archived‚Äì and new, updated information can be added in the future.\n\nJoin: Register for Stack Exchange and join Bioacoustics Stack Exchange\nSearch: Learn how to search for questions\n\nGo to BSE site: https://bioacoustics.stackexchange.com/\nSearch for your topic of interest (top search bar), or look at Tags (left menu)\n\nAsk a Question: Learn how to write a good question (see here and here). Be thoughtful and thorough in your question‚Äì provide enough information so that the readers know the context and the specific question (s) you have. Show your research (what did you do to try to answer the question yourself)? Poorly asked questions can lead to confusion and answers that may not be helpful. If you post a question‚Äì come back to find the answers. Did you get a complete answer? If so, accept the answer. Are you confused by the answer(s), then comment on those answers to clear that up.\nAnswer a Question: Learn how to write a good answer (see here and here). Answers should provide Answers. If you have a question or remark about the question‚Äì you can post a comment. Comments are considered temporary notes, while Answers are archived.\nShare what you learn! Want to share your own knowledge? YES, it is ok to answer your own questions! See more here.",
    "crumbs": [
      "Sharing Knowledge",
      "Stack Exchange"
    ]
  },
  {
    "objectID": "content/labManual.html",
    "href": "content/labManual.html",
    "title": "Lab Manual",
    "section": "",
    "text": "During our first PAM-Team Openscapes (Fall 2024), we developed methods to create individual lab manuals (for each science center), and link them to a National NMFS PAM Lab Manual.\n\nGetting Started\nOrganize with Yaml\nCreate Content\nGithub Collaboration, including: Issues, Projects, and Discussions",
    "crumbs": [
      "Lab Manual"
    ]
  },
  {
    "objectID": "content/rendering.html",
    "href": "content/rendering.html",
    "title": "Rendering",
    "section": "",
    "text": "The repo includes a GitHub Action that will render (build) the website automatically when you make changes to the files. It will be pushed to the gh-pages branch.\nBut when you are developing your content, you will want to render it locally."
  },
  {
    "objectID": "content/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "href": "content/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "title": "Rendering",
    "section": "Step 1. Make sure you have a recent RStudio",
    "text": "Step 1. Make sure you have a recent RStudio\nHave you updated RStudio since about August 2022? No? Then update to a newer version of RStudio. In general, you want to keep RStudio updated and it is required to have a recent version to use Quarto."
  },
  {
    "objectID": "content/rendering.html#step-2.-clone-and-create-rstudio-project",
    "href": "content/rendering.html#step-2.-clone-and-create-rstudio-project",
    "title": "Rendering",
    "section": "Step 2. Clone and create RStudio project",
    "text": "Step 2. Clone and create RStudio project\nFirst, clone the repo onto your local computer. How? You can click File &gt; New Project and then select ‚ÄúVersion Control‚Äù. Paste in the url of the repository. That will clone the repo on to your local computer. When you make changes, you will need to push those up."
  },
  {
    "objectID": "content/rendering.html#step-3.-render-within-rstudio",
    "href": "content/rendering.html#step-3.-render-within-rstudio",
    "title": "Rendering",
    "section": "Step 3. Render within RStudio",
    "text": "Step 3. Render within RStudio\nRStudio will recognize that this is a Quarto project by the presence of the _quarto.yml file and will see the ‚ÄúBuild‚Äù tab. Click the ‚ÄúRender website‚Äù button to render to the _site folder.\nPreviewing: You can either click index.html in the _site folder and specify ‚Äúpreview in browser‚Äù or set up RStudio to preview to the viewer panel. To do the latter, go to Tools &gt; Global Options &gt; R Markdown. Then select ‚ÄúShow output preview in: Viewer panel‚Äù."
  },
  {
    "objectID": "content/PAM-SI-Mtg-Exercises.html",
    "href": "content/PAM-SI-Mtg-Exercises.html",
    "title": "Workshop Exercises",
    "section": "",
    "text": "We will create our Workshop Report using our meeting Github Repository (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024){target=‚Äú_blank‚Äù}. By all working together, we can have the bulk of the report completed by the end of the workshop. Many hands make light work.\nExercise:\nWe will all work together on one small part of the report to fill in some of the information we know we will need. We will split into pairs and each be assigned an exercise to complete. You will be tagged in your assignment through a Github issue and should receive an associated email. Find your assignment during the Github session either on github.com or through your email, then follow the instructions below.\nTo ensure that you are working with the most up to date repository, select ‚ÄúFetch origin‚Äù on the top toolbar of Github Desktop before starting the exercise. If at any point you receive an error that you cannot fetch origin or push changes to github, follow the Step 5 of the ‚ÄúPre Meeting Prep‚Äù instructions to login to github.com.\nThe exercises are:\n\nAdd Introduction Draft Text\nGithub section\nAdd Authors\nList of Attendees\nAcknowledgements Text\nReferences\nNCEI Section\nCloud Section\nTrend Section\nSoundscape Section\nStock Assessment Section\nManagement Section\nDetection Section\n\nIf you are interested in more practice, go to the issues tab on github.com, assign yourself to the Detection Section, and complete that exercise.\nAt the end of the exercise, make sure everyone saves their changes and pushes their information up to Github, then we will render the output and view the results. How long did it take us to work on that? Continue throughout the workshop, having one or more people draft the paper‚Äì we will work on the google docs linked in the agenda for notes during any given session, but then one person will summarize these notes into Github, and others can edit or revise."
  },
  {
    "objectID": "content/PAM-SI-Mtg-Exercises.html#github-collaboration",
    "href": "content/PAM-SI-Mtg-Exercises.html#github-collaboration",
    "title": "Workshop Exercises",
    "section": "",
    "text": "We will create our Workshop Report using our meeting Github Repository (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024){target=‚Äú_blank‚Äù}. By all working together, we can have the bulk of the report completed by the end of the workshop. Many hands make light work.\nExercise:\nWe will all work together on one small part of the report to fill in some of the information we know we will need. We will split into pairs and each be assigned an exercise to complete. You will be tagged in your assignment through a Github issue and should receive an associated email. Find your assignment during the Github session either on github.com or through your email, then follow the instructions below.\nTo ensure that you are working with the most up to date repository, select ‚ÄúFetch origin‚Äù on the top toolbar of Github Desktop before starting the exercise. If at any point you receive an error that you cannot fetch origin or push changes to github, follow the Step 5 of the ‚ÄúPre Meeting Prep‚Äù instructions to login to github.com.\nThe exercises are:\n\nAdd Introduction Draft Text\nGithub section\nAdd Authors\nList of Attendees\nAcknowledgements Text\nReferences\nNCEI Section\nCloud Section\nTrend Section\nSoundscape Section\nStock Assessment Section\nManagement Section\nDetection Section\n\nIf you are interested in more practice, go to the issues tab on github.com, assign yourself to the Detection Section, and complete that exercise.\nAt the end of the exercise, make sure everyone saves their changes and pushes their information up to Github, then we will render the output and view the results. How long did it take us to work on that? Continue throughout the workshop, having one or more people draft the paper‚Äì we will work on the google docs linked in the agenda for notes during any given session, but then one person will summarize these notes into Github, and others can edit or revise."
  },
  {
    "objectID": "content/organizeYml.html",
    "href": "content/organizeYml.html",
    "title": "Organize with Yaml",
    "section": "",
    "text": "Quarto Books are combinations of multiple documents (chapters) into a single manuscript in one or more formats (HTML, PDF, Word Doc, etc). Our example below is based on the PAM_template_lab_manual:\nindex.qmd- the index.qmd file is in the root director for your project, and serves as the Home Page for a website. This file is mandatory.\n_quarto.yml- the _quarto.yml is the configuration file for your project, and is also located in the root directory. The _quarto.yml provides information regarding overall formatting and structure of pages within the larger document.\nREADME.md- Markdown file that serves as the readme for the github repository.\ncontent folder- This folder contains the individual pages for your document. Alternative names for this folder are sometimes used, but we have found that the term ‚Äòcontent‚Äô is less confusing that frequently used alternatives. Here we recommend using this for consistency.\n\n\nYAML is a human-readable data serialization language commonly used for configuration files. YAML works with multiple programming languages, and also allows users to add comments to their data (useful for documentation). YAML does require very specific indentation, mapping, etc. It is helpful to use a yaml checker to be sure your yaml does not have errors.\nQuarto books/websites contain a _quarto.yml file, which is the website‚Äôs configuration file. It is essentially metadata for the website that includes the order that the pages/chapters will be in. This is where you organize your site. Here is a side-by-side example:\n\nLearn more, here.",
    "crumbs": [
      "Lab Manual",
      "Organize with Yaml"
    ]
  },
  {
    "objectID": "content/organizeYml.html#how-to-organize-your-quarto-book",
    "href": "content/organizeYml.html#how-to-organize-your-quarto-book",
    "title": "Organize with Yaml",
    "section": "",
    "text": "Quarto Books are combinations of multiple documents (chapters) into a single manuscript in one or more formats (HTML, PDF, Word Doc, etc). Our example below is based on the PAM_template_lab_manual:\nindex.qmd- the index.qmd file is in the root director for your project, and serves as the Home Page for a website. This file is mandatory.\n_quarto.yml- the _quarto.yml is the configuration file for your project, and is also located in the root directory. The _quarto.yml provides information regarding overall formatting and structure of pages within the larger document.\nREADME.md- Markdown file that serves as the readme for the github repository.\ncontent folder- This folder contains the individual pages for your document. Alternative names for this folder are sometimes used, but we have found that the term ‚Äòcontent‚Äô is less confusing that frequently used alternatives. Here we recommend using this for consistency.\n\n\nYAML is a human-readable data serialization language commonly used for configuration files. YAML works with multiple programming languages, and also allows users to add comments to their data (useful for documentation). YAML does require very specific indentation, mapping, etc. It is helpful to use a yaml checker to be sure your yaml does not have errors.\nQuarto books/websites contain a _quarto.yml file, which is the website‚Äôs configuration file. It is essentially metadata for the website that includes the order that the pages/chapters will be in. This is where you organize your site. Here is a side-by-side example:\n\nLearn more, here.",
    "crumbs": [
      "Lab Manual",
      "Organize with Yaml"
    ]
  },
  {
    "objectID": "content/organizeYml.html#modify-yaml",
    "href": "content/organizeYml.html#modify-yaml",
    "title": "Organize with Yaml",
    "section": "Modify YAML",
    "text": "Modify YAML\n\nEdit URLs- The website and repository links for the template need to be modified to point towards YOUR web/repo URLs\n\nChange name and structure of Chapters. Does the chapter organization and naming fit your needs? Modify the contents component of the yaml to suit your needs, using ‚Äòsections‚Äô to identify identify sections with related chapters. Indentation and spacing are critical for yaml, so once you are ready, double-check your yaml by copy/paste entire yaml into a yamlchecker.\nhref: refers to the name of the relevant qmd file (located in the contents folder).\ntext: this is the text you will see on the sidebar of the web-book.\nsection: to identify sections that contain more than one chapter/pages within it. If you want the high level of the ‚Äòsection‚Äô to contain information (when you click on it, a summary page appears), then point directly to a qmd file within the content folder. Otherwise, simply title the section.\n\nYou are now ready to create and modify your chapters/pages! Go to ‚ÄòCreate Content‚Äô!",
    "crumbs": [
      "Lab Manual",
      "Organize with Yaml"
    ]
  },
  {
    "objectID": "content/organizeYml.html#resources",
    "href": "content/organizeYml.html#resources",
    "title": "Organize with Yaml",
    "section": "Resources",
    "text": "Resources\n\nYaml Checker\nQuarto Yaml Options (HTML)\nQuarto Book Structure",
    "crumbs": [
      "Lab Manual",
      "Organize with Yaml"
    ]
  },
  {
    "objectID": "content/Presentations.html",
    "href": "content/Presentations.html",
    "title": "Presentations",
    "section": "",
    "text": "Presentations can be made in Quarto as three different slide formats including reveal.js (HTML), PowerPoint (MS Office), and Beamer (LaTeX/PDF)."
  },
  {
    "objectID": "content/Presentations.html#quarto-slides",
    "href": "content/Presentations.html#quarto-slides",
    "title": "Presentations",
    "section": "",
    "text": "Presentations can be made in Quarto as three different slide formats including reveal.js (HTML), PowerPoint (MS Office), and Beamer (LaTeX/PDF)."
  },
  {
    "objectID": "content/Presentations.html#html-slides-template",
    "href": "content/Presentations.html#html-slides-template",
    "title": "Presentations",
    "section": "HTML Slides Template",
    "text": "HTML Slides Template\nMethods Slides Template"
  },
  {
    "objectID": "content/writersWorkshop.html",
    "href": "content/writersWorkshop.html",
    "title": "Writer‚Äôs Workshop",
    "section": "",
    "text": "Writers Workshop is a weekly co-working meeting where we work on our individual projects together. It is especially difficult to stay focused while writing, and these workshops provide a level of accountability that helps us move our writing forward.\nMeetings are virtual and typically 2-3 hours in length. You should have your materials ready before the workshop begins, so you can focus on your writing.",
    "crumbs": [
      "Co-Working",
      "Writer's Workshop"
    ]
  },
  {
    "objectID": "content/writersWorkshop.html#resources",
    "href": "content/writersWorkshop.html#resources",
    "title": "Writer‚Äôs Workshop",
    "section": "Resources",
    "text": "Resources\nWriting Science: What makes scientific writing hard and how to make it easier (Kathleen Grogan). https://doi.org/10.1002/bes2.1800\nDefining the Role of Authors and Contributors (ICMJE). Link here.\nA guide to getting published in Ecology and Evolution (BES). Link here.\nVideo Tutorial: Beautiful reports and presentations with Quarto (RStudio). Link here.",
    "crumbs": [
      "Co-Working",
      "Writer's Workshop"
    ]
  },
  {
    "objectID": "content/researchCompendium.html",
    "href": "content/researchCompendium.html",
    "title": "Research Compendium",
    "section": "",
    "text": "A research compendium is a comprehensive collection of all the digital components related to a research project, including data, code, and text (protocols, reports, metadata, etc).\nBy creating a research compendium for your projects, you create a single location to serve as a ‚Äòhome‚Äô for all components of your project. For components that are too large to store in the repository (raw data or larger data products), you can identify links to those data/data products in the repository. For example:\n\nNational Center for Environmental Information (NCEI): raw data, metadata, soundscape data\nOpen Science Data Platforms: digital platform that allows researchers to access, share, and store research data. Examples include Figshare, Zenodo, etc.\nDetection Data: Specific detections relevant to a project can be saved to PACM, OBIS, GBIF, or other public platforms.\nGoogle Drive: Providing public access to documents stored on google drive can be complicated, especially for NOAA drives. To create a fully accessible research compendium, we recommend avoiding storing important documents on google drive if an alternative is available.\n\nYou can keep your repository private while it is in progress (if that is important to you), and then make it public when you are ready.",
    "crumbs": [
      "Research Compendium"
    ]
  },
  {
    "objectID": "content/researchCompendium.html#what-is-a-research-compendium",
    "href": "content/researchCompendium.html#what-is-a-research-compendium",
    "title": "Research Compendium",
    "section": "",
    "text": "A research compendium is a comprehensive collection of all the digital components related to a research project, including data, code, and text (protocols, reports, metadata, etc).\nBy creating a research compendium for your projects, you create a single location to serve as a ‚Äòhome‚Äô for all components of your project. For components that are too large to store in the repository (raw data or larger data products), you can identify links to those data/data products in the repository. For example:\n\nNational Center for Environmental Information (NCEI): raw data, metadata, soundscape data\nOpen Science Data Platforms: digital platform that allows researchers to access, share, and store research data. Examples include Figshare, Zenodo, etc.\nDetection Data: Specific detections relevant to a project can be saved to PACM, OBIS, GBIF, or other public platforms.\nGoogle Drive: Providing public access to documents stored on google drive can be complicated, especially for NOAA drives. To create a fully accessible research compendium, we recommend avoiding storing important documents on google drive if an alternative is available.\n\nYou can keep your repository private while it is in progress (if that is important to you), and then make it public when you are ready.",
    "crumbs": [
      "Research Compendium"
    ]
  },
  {
    "objectID": "content/researchCompendium.html#conventions",
    "href": "content/researchCompendium.html#conventions",
    "title": "Research Compendium",
    "section": "Conventions",
    "text": "Conventions\nBy following suggested conventions, we can find our way around our own data, and also that of others who follow the same conventions. Our goal is to (eventually) create a few optional github templates for Research Compendiums, providing different final reporting options. These may evolve over time, but we hope to retain the same folder conventions.\nThe following link(s) are to our research compendium templates:\n\nWebsite Output Research Compendium Template",
    "crumbs": [
      "Research Compendium"
    ]
  },
  {
    "objectID": "content/researchCompendium.html#examples",
    "href": "content/researchCompendium.html#examples",
    "title": "Research Compendium",
    "section": "Examples",
    "text": "Examples\nAdrift in the California Current Research Compendium\nBeaked Whale BANTER Research Compendium",
    "crumbs": [
      "Research Compendium"
    ]
  },
  {
    "objectID": "content/code.html",
    "href": "content/code.html",
    "title": "Rendering with Code",
    "section": "",
    "text": "You can have code (R, Python or Julia) in your qmd file. You will need to have these installed on your local computer, but presumably you do already if you are adding code to your qmd files.\nx &lt;- c(5, 15, 25, 35, 45, 55)\ny &lt;- c(5, 20, 14, 32, 22, 38)\nlm(x ~ y)\n\n\nCall:\nlm(formula = x ~ y)\n\nCoefficients:\n(Intercept)            y  \n      1.056        1.326"
  },
  {
    "objectID": "content/code.html#modify-the-github-action",
    "href": "content/code.html#modify-the-github-action",
    "title": "Rendering with Code",
    "section": "Modify the GitHub Action",
    "text": "Modify the GitHub Action\nYou will need to change the GitHub Action in .github/workflows to install these and any needed packages in order for GitHub to be able to render your webpage. The GitHub Action install R since I used that in code.qmd. If you use Python or Julia instead, then you will need to update the GitHub Action to install those.\nIf getting the GitHub Action to work is too much hassle (and that definitely happens), you can alway render locally and publish to the gh-pages branch. If you do this, make sure to delete or rename the GitHub Action to something like\nrender-and-publish.old_yml\nso GitHub does not keep trying to run it. Nothing bad will happen if you don‚Äôt do this, but if you are not using the action (because it keeps failing), then you don‚Äôt need GitHub to run it."
  },
  {
    "objectID": "content/code.html#render-locally-and-publish-to-gh-pages-branch",
    "href": "content/code.html#render-locally-and-publish-to-gh-pages-branch",
    "title": "Rendering with Code",
    "section": "Render locally and publish to gh-pages branch",
    "text": "Render locally and publish to gh-pages branch\nTo render locally and push up to the gh-pages branch, open a terminal window and then cd to the directory with the Quarto project. Type this in the terminal:\nquarto render gh-pages"
  },
  {
    "objectID": "content/customizing.html",
    "href": "content/customizing.html",
    "title": "Customization",
    "section": "",
    "text": "Quarto allow many bells and whistles to make nice output. Read the documentation here Quarto documentation."
  },
  {
    "objectID": "content/customizing.html#quarto-documentation",
    "href": "content/customizing.html#quarto-documentation",
    "title": "Customization",
    "section": "",
    "text": "Quarto allow many bells and whistles to make nice output. Read the documentation here Quarto documentation."
  },
  {
    "objectID": "content/customizing.html#examples",
    "href": "content/customizing.html#examples",
    "title": "Customization",
    "section": "Examples",
    "text": "Examples\nLooking at other people‚Äôs Quarto code is a great way to figure out how to do stuff. Most will have a link to a GitHub repo where you can see the raw code. Look for a link to edit page or see source code. This will usually be on the right. Or look for the GitHub icon somewhere.\n\nQuarto gallery\nnmfs-openscapes\nFaye lab manual\nquarto-titlepages Note the link to edit is broken. Go to repo and look in documentation directory."
  },
  {
    "objectID": "content/gitOrgs.html",
    "href": "content/gitOrgs.html",
    "title": "Github Organizations",
    "section": "",
    "text": "Github Teams and Organizations provide a means of organizing research people and institutions.\nGithub Organizations: Organizations are the ‚Äòowners‚Äô of shared repositories, discussions, and projects where these things are kept completely separate from each other. For example, NOAA Fisheries has a single nmfs-ost Github Org.\nGithub Teams: Github Teams are groups of users of common projects, and there can also be teams within teams. For example: the PAM Strategic Initiative Team has a number of additional teams within it (one for each PAM-SI Team).\nA team belongs to an organization, and an organization can have many teams. Best practices suggest minimizing the number of existing Github Organizations, deferring to ‚ÄòTeams‚Äô for identifying groups within an Organization.\nIn this exercise, each PAM-SI Team will develop a strategy for their Github team and develop a ‚ÄúLab Manual‚Äù repository to serve as the ‚Äòlanding page‚Äô for their team. Throughout, we will use the PAM-Glider team as an example. For reference, here is a link to the nmfs-ost Organization Standard Operating Procedures.",
    "crumbs": [
      "Team Organization",
      "Github Organizations"
    ]
  },
  {
    "objectID": "content/gitOrgs.html#create-your-team",
    "href": "content/gitOrgs.html#create-your-team",
    "title": "Github Organizations",
    "section": "Create your team",
    "text": "Create your team\n\nCreate a Team. The PAM-SI teams have been created for you; here are directions if you‚Äôd like to create other teams. Here is a link to the list of PAM Strategic Initiative Teams.\nAdd Team Members. Identify one or more administrators and ensure they have full administrative rights. If this team is within the nmfs-ost Organization, you may need to reach out to the Org Administrators to modify team members‚Äô administrative rights. You can submit an Issue here to request assistance from the nmsf-ost administrators.\nCreate a Team Manual. This will serve as the primary go-to for all components of that team.\n\nFollow the methods for creating a ‚ÄòLab Manual‚Äô for your team (a ‚ÄòTeam Manual‚Äô). Use the same naming structure for your team manual as your name. For example, the repository for the PAM-Glider team will be titled ‚ÄúPAM-Glider‚Äù.\nReadMe: Include an ‚ÄúAbout‚Äù statement to make it clear what this repository is.\nIndex.qmd: Create a home page that summarizes the goals and tasks of the teams. For suggestions, we recommend viewing the PAM-SI pages from the National PAM Network site and the PAM-Glider site.\nCreate a page for each component of your research (see PAM-Glider site as an example). Provide any methods, figures, preliminary results, or other summary information that might be useful to the public or to our NOAA administrators and managers.\nAdd a ‚Äòcontact us‚Äô Page. Your team can decide the best way to receive contacts (email or submission of an issue related to the repository). If you ask them to submit an issue, create an issue templatethat automatically identifies the Assignees for that issue (and ensure that those Assignees will automatically receive an email for that issue).\n\nAlign Team Manual with PAM_National_Network\n\nReview the PAM-SI Page for your Team. Identify inconsistencies, updates, and helpful figures.\nCreate an Issue for that page by selecting the ‚ÄúReport an Issue‚Äù button on the upper right-hand side of the relevant page. Describe all the suggested changes (and provide any images or links to images to include), and provide a link to the website for your PAM-Team Manual website. Submit the issue and assign to Bella and yourself.",
    "crumbs": [
      "Team Organization",
      "Github Organizations"
    ]
  },
  {
    "objectID": "content/gitOrgs.html#transfer-existing-repositories",
    "href": "content/gitOrgs.html#transfer-existing-repositories",
    "title": "Github Organizations",
    "section": "Transfer existing repositories",
    "text": "Transfer existing repositories\nFor instructional purposes, we will refer to the original repository as the OldRepo and the New Repository (within the nmfs-ost org) as the NewRepo. If your previous repository was located within a different organization (say your science center org), we will refer to that as the OldOrg, and as the nmfs-ost as the NewOrg. For additional information, see the nmfs-ost SOP.\n\n\n\n\n\n\nNO PII/BII are allowed on Github!! This includes confidential fisheries data, passwords, etc!\n\n\n\n\n\n\n\nIdentify Team Members. Ensure that all relevant NOAA personnel are listed as team members on the new organization (nmfs-ost). If there are non-NOAA partners who require administrative access to the repository, you will need to use alternative methods for outside collaboration (see Outside Collaborators, below). If this is unacceptable, then you may wait on transferring the repository, but still link to that repository from your Team Manual.\nPrepare Project Boards. Do you have any project boards linked to this repository? Project boards do not transfer; however, if you ensure that all Project Board entries are saved as ‚ÄòIssues‚Äô, then the Issues will transfer over and you can rebuild your Project Board in the new org (note that they will not retain their ‚Äòstatus‚Äô tags, so you may want to include a comment stating their status prior to transferring the repository). Closed issues may not transfer using this method and you may want to consider manually entering closed issues that should be retained.\nCheck Discussion Boards All discussions should transfer if they are at the repository level and being transferred to an organization that does not allow for organization level discussions. Currently, the NMFS OST does not have a discussion board at the organization level, so any repositories transferred there should include the existing discussion boards. More information on discussions here\nTransfer Repository. Navigate to the Settings of your OldOrg, and scroll down to the ‚ÄòDanger Zone‚Äô. Select the Transfer button to transfer the repository, and select the nmfs-ost Organization. Rename your Repository to include the prefix ‚ÄòPAM‚Äô as part of the name (to facilitate searching).\nIdentify Admin Settings. Open the NewRepo in the nmfs-ost Enterprise organization. Can you see the settings? If not, you may not have admin rights. Submit an Issue here to request assistance from the nmsf-ost administrators to provide you with administrative rights for that repository.\nFix Github Pages. If your OldRepo had GithubPages (a website), check the Settings ‚Äì&gt; Github Pages to ensure that GithubPages is turned ‚Äòon‚Äô. If you have links to the Github Pages in your Readme or on the right sidebar, update those links. Update links in any other important locations. If you suspect the broken link from your previous OldRepo will be problematic, you can create a redirect from your old Organization by following the methods outlined in the nmfs-ost SOP ‚ÄòAuto-redirect Github Pages‚Äô.\nAdd an ‚ÄúAbout‚Äù Statement. Open the ReadMe and provide an ‚ÄúAbout‚Äù statement to make it clear what the purpose of the repository is.\nAdd NOAA Disclaimer and License. Revise readme to ensure that there is a NOAA Disclaimer (below) and a License file for software (including R packages){target=‚Äú_blank‚Äù}.\nSuggested Disclaimer:\n‚ÄúThis repository is a scientific product and is not official communication of the National Oceanic and Atmospheric Administration, or the United States Department of Commerce. All NOAA GitHub project code is provided on an ‚Äòas is‚Äô basis and the user assumes responsibility for its use. Any claims against the Department of Commerce or Department of Commerce bureaus stemming from the use of this GitHub project will be governed by all applicable Federal law. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply their endorsement, recommendation or favoring by the Department of Commerce. The Department of Commerce seal and logo, or the seal and logo of a DOC bureau, shall not be used in any manner to imply endorsement of any commercial product or activity by DOC or the United States Government.‚Äù\n\n\nAdd new repositories\nAs the work of your PAM-SI team expands, add additional repositories as needed. These teams are intended as cross-office or National level projects.\n\nIdentify active Repo Users. Will all active Repo Users have noaa emails? Will they have access to nmfs-ost? If not, then you can choose to either (1) host those repositories outside of the Enterprise Github nmfs-ost organization, or (2) require non-noaa users to submit push requests as a means of interacting with the repository. We have not yet tested this system to identify any problems.\nCreate Repository. Create your repository (see Quickstart for repositories) and use a thoughtful name that includes the Prefix ‚ÄòPAM‚Äô (at a minimum). Use the word ‚Äòtest‚Äô in the name if the purpose of this repo is to test something out (and later delete!). Consider using a template for your repo, such as our Research Compendium or our Lab Manual templates.\nAdd Team Members and ensure they have the appropriate level of user access.\nAdd an ‚ÄúAbout‚Äù Statement. Open the ReadMe and provide an ‚ÄúAbout‚Äù statement to make it clear what the purpose of the repository is.\nAdd NOAA Disclaimer and License. Revise the ReadMe to ensure that there is a NOAA Disclaimer (below) and a License file for software (including R packages) .\nSuggested Disclaimer:\n‚ÄúThis repository is a scientific product and is not official communication of the National Oceanic and Atmospheric Administration, or the United States Department of Commerce. All NOAA GitHub project code is provided on an ‚Äòas is‚Äô basis and the user assumes responsibility for its use. Any claims against the Department of Commerce or Department of Commerce bureaus stemming from the use of this GitHub project will be governed by all applicable Federal law. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply their endorsement, recommendation or favoring by the Department of Commerce. The Department of Commerce seal and logo, or the seal and logo of a DOC bureau, shall not be used in any manner to imply endorsement of any commercial product or activity by DOC or the United States Government.‚Äù\nAdd Relevant Page to Team Manual. Create a page within the Team Manual to identify, link, and describe this repository (and summarize any results).",
    "crumbs": [
      "Team Organization",
      "Github Organizations"
    ]
  },
  {
    "objectID": "content/gitOrgs.html#outside-collaborators",
    "href": "content/gitOrgs.html#outside-collaborators",
    "title": "Github Organizations",
    "section": "Outside Collaborators",
    "text": "Outside Collaborators\nIf you would like to request someone be added as an outside collaborator (because they do not have a noaa.gov email account), please contact the nmfs-ost GitHub organization administrators. Those outside of NOAA can collaborate by forking the repository and submitting a pull request to public repositories, and the GitHub Governance Team is clarifying which additional permissions are allowed for non-NOAA collaborators on GitHub Enterprise. See nmfs-ost SOP for more information.",
    "crumbs": [
      "Team Organization",
      "Github Organizations"
    ]
  },
  {
    "objectID": "content/journalClub.html",
    "href": "content/journalClub.html",
    "title": "Journal Club",
    "section": "",
    "text": "Under Construction \nGoal: Encourage group discussions of new & exciting research.",
    "crumbs": [
      "Co-Working",
      "Journal Club"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Open Science for NOAA Fisheries PAM",
    "section": "",
    "text": "Open Science is a movement to make scientific research (including publications, data, software) transparent and accessible so that knowledge is shared. This repository provides resources to help NOAA Fisheries Passive Acoustic Monitoring groups adopt an Open Science approach to their research.\nPublic access to knowledge is a fundamental component of Open Science that often takes a back seat to open access to methods and data. The open sharing of knowledge not only helps our future selves, it also helps serves to lessen the inequities inherent in scientific research. When we learn something new, we should consider how we can share this information. Here we give advice on sharing knowledge through BioAcoustics Stack Exchange (a public Q & A platform) and with Zotero Libraries (shared public libraries to identify reports and publications).\nCo-working allows researchers to work together in time and/or space to provide motivation, accountability, and assistance. There are any number of ways to co-work, and here we provide a few suggestions to conduct co-working sprints or writers workshops.\nThis section contains methods for adopting an Open Science broken up into specific goals, including: Creating a Lab Manual, Developing a Github Organization, and creating a Research Compendium.\nIn the spirit of collaborative open science, if you have an idea or suggestion for expanding or improving this set of Open Science materials, please follow the instructions below to submit and issue.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#sharing-knowledge",
    "href": "index.html#sharing-knowledge",
    "title": "Open Science for NOAA Fisheries PAM",
    "section": "Sharing Knowledge",
    "text": "Sharing Knowledge",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#co-working",
    "href": "index.html#co-working",
    "title": "Open Science for NOAA Fisheries PAM",
    "section": "Co-Working",
    "text": "Co-Working",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#openscapes",
    "href": "index.html#openscapes",
    "title": "Open Science for NOAA Fisheries PAM",
    "section": "OpenScapes",
    "text": "OpenScapes",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#if-you-need-help-or-if-you-have-suggestions",
    "href": "index.html#if-you-need-help-or-if-you-have-suggestions",
    "title": "Open Science for NOAA Fisheries PAM",
    "section": "IF YOU NEED HELP or IF YOU HAVE SUGGESTIONS",
    "text": "IF YOU NEED HELP or IF YOU HAVE SUGGESTIONS\nSubmit an Issue on THIS repository requesting help:\n\nGo to https://github.com/SAEL-SWFSC/OpenScience\nAt top Menu Bar, click on ‚äô Issues\nAt right, click on green NEW ISSUES button\nGive a descriptive title, and add a description of the specific help you need. At the right, under Assignees, choose all three:\n\nshannonrankin\nKourtney-Burger\n\nOne of us will help you as soon as we can!",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "content/OpenScience_GithubBranches.html",
    "href": "content/OpenScience_GithubBranches.html",
    "title": "Github Branches",
    "section": "",
    "text": "Multiple people working on Github Repository and we want to insure that (1) we are editing the most recent version and (2) we do not have any conflicts when we upload our updates to the main repo.\n\n\n\n\nAll work done in branches (not the main!)\nWork in small chunks (1 session, &lt; 1 day)\nAt start of session, make sure your branch is updated!\nAt end of session, push your updates to Github using Pull Request\nStart clean at your next work session!\n\n\n\n\n\nCreate a Branch\n\nGithub Desktop, create and name your branch. You can use the same name everytime, or you can create new branches at intervals. If you create many branches, you will want to delete them when they are no longer being used. When asked, publish Pull Request.\n\n\n\nUsing Github Desktop, create your own working branch in Github.\n\n\n\n\n\n\nUpdate your Branch\n\nIf your branch is not new, make sure to update your branch so that it includes all updates on the main branch.¬† See this video by Eli Holmes (30sec through 6 min) to update your personal branch. NOTE: We Will Use Different Methods To Update The Main Branch With The Modifications On Your Branch!\nYou can also update mid-session, if that is important to the work you are doing.\n\n\n\n\nDo Good Work!¬†\n\nDo good work. Add information to your topic in your branch.\nCommit your changes, providing detailed explanations of changes made. If you suspect your work will create a conflict, explain this and provide information on how to address this conflict.¬†\n\nPush Updates to Github using Pull Request.\nAt the end of a session, push your changes to Github using a Pull Request. This will allow us to review all changes to the main before they are accepted (this serves as a double-check to ensure there are no conflicts).¬†\n\nPush to Origin\n\n\n\nUsing Github Desktop, push your changes to Origin (Github).\n\n\nOpen and Publish Pull Request. This will lead you to Github Online‚Äì Go ahead and add pull request, but do not merge. Shannon will periodically review pull requests and merge them (this will allow her to keep updated on changes).\n\n\n\nUsing Github Desktop, Publish your Pull Request."
  },
  {
    "objectID": "content/OpenScience_GithubBranches.html#github-collaboration-working-with-branches",
    "href": "content/OpenScience_GithubBranches.html#github-collaboration-working-with-branches",
    "title": "Github Branches",
    "section": "",
    "text": "Multiple people working on Github Repository and we want to insure that (1) we are editing the most recent version and (2) we do not have any conflicts when we upload our updates to the main repo.\n\n\n\n\nAll work done in branches (not the main!)\nWork in small chunks (1 session, &lt; 1 day)\nAt start of session, make sure your branch is updated!\nAt end of session, push your updates to Github using Pull Request\nStart clean at your next work session!\n\n\n\n\n\nCreate a Branch\n\nGithub Desktop, create and name your branch. You can use the same name everytime, or you can create new branches at intervals. If you create many branches, you will want to delete them when they are no longer being used. When asked, publish Pull Request.\n\n\n\nUsing Github Desktop, create your own working branch in Github.\n\n\n\n\n\n\nUpdate your Branch\n\nIf your branch is not new, make sure to update your branch so that it includes all updates on the main branch.¬† See this video by Eli Holmes (30sec through 6 min) to update your personal branch. NOTE: We Will Use Different Methods To Update The Main Branch With The Modifications On Your Branch!\nYou can also update mid-session, if that is important to the work you are doing.\n\n\n\n\nDo Good Work!¬†\n\nDo good work. Add information to your topic in your branch.\nCommit your changes, providing detailed explanations of changes made. If you suspect your work will create a conflict, explain this and provide information on how to address this conflict.¬†\n\nPush Updates to Github using Pull Request.\nAt the end of a session, push your changes to Github using a Pull Request. This will allow us to review all changes to the main before they are accepted (this serves as a double-check to ensure there are no conflicts).¬†\n\nPush to Origin\n\n\n\nUsing Github Desktop, push your changes to Origin (Github).\n\n\nOpen and Publish Pull Request. This will lead you to Github Online‚Äì Go ahead and add pull request, but do not merge. Shannon will periodically review pull requests and merge them (this will allow her to keep updated on changes).\n\n\n\nUsing Github Desktop, Publish your Pull Request."
  },
  {
    "objectID": "content/knowledge.html",
    "href": "content/knowledge.html",
    "title": "Sharing Knowledge",
    "section": "",
    "text": "Open sharing of knowledge is a fundamental component of Open Science.\n\nBioacoustics Stack Exchange\nZotero Libraries\nResearch Compendium",
    "crumbs": [
      "Sharing Knowledge"
    ]
  },
  {
    "objectID": "content/gitDiscussions.html",
    "href": "content/gitDiscussions.html",
    "title": "Github Discussions",
    "section": "",
    "text": "Github Discussions are a collaborative communication forum for the community around an open source or internal project. Community members can ask and answer questions, share updates, and more. Rather than create a new discussion, we will work together within our Open Science Discussion board to learn new ways of working together as a team.",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Discussions"
    ]
  },
  {
    "objectID": "content/gitDiscussions.html#working-in-discussions",
    "href": "content/gitDiscussions.html#working-in-discussions",
    "title": "Github Discussions",
    "section": "Working in Discussions",
    "text": "Working in Discussions\nHere we will identify several different ways of working within discussions, and practice with those ways. For each example, we will have a lead who initiates the task, and then all other members will collaborate. Our goal is to work with Github Discussions in this space, in order to identify how it will work for our own teams.\n\nIdeas - Ideas to change or improve the project (Open-ended discussion)\n\nExample: Does anyone have an idea on helpful things to add to lab manual?\n\nPolls- Polls with multiple options for the community to vote or discuss (Polls)\n\nExample: Give a few options for next steps in Github after the Lab Manual (Research Compendium, Repo for Repeated Reports, Project Boards for Analysis Management, Writing NMFS Reports, other)\n\nQ&A- Questions for the community to answer, with a question/answer format (Question & Answer)\n\nExample: Do you need 1:1 help with your Lab Manual?\n\nShow and Tell- Creations, experiments, or tests relevant to the project (Open-ended discussion)\n\nExample: Jennifer McCullough can add info/links to add NMFS Logos to their documents\n\nAnnouncements- Updates and news from project maintainers (Announcement)\n\nExample: Add announcement: Openscapes Show & Tell for PAM-SI and community, IRA PAM SI Team Meeting, Wednesday, December 11, ‚ãÖ1:00 ‚Äì 2:00pm Pacific Time\n\nGeneral- Anything relevant to the project (Open-ended discussion)",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Discussions"
    ]
  },
  {
    "objectID": "content/gitDiscussions.html#link-to-nmfs-pam-github-discussions",
    "href": "content/gitDiscussions.html#link-to-nmfs-pam-github-discussions",
    "title": "Github Discussions",
    "section": "Link to NMFS-PAM Github Discussions",
    "text": "Link to NMFS-PAM Github Discussions",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Discussions"
    ]
  },
  {
    "objectID": "content/gitDiscussions.html#resources",
    "href": "content/gitDiscussions.html#resources",
    "title": "Github Discussions",
    "section": "Resources",
    "text": "Resources\nGithub Discussions\nGetting Started with Github Discussions (video)",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Discussions"
    ]
  },
  {
    "objectID": "content/tables.html",
    "href": "content/tables.html",
    "title": "Tables",
    "section": "",
    "text": "Tables can be tricky to work with in quarto, this page (temporarily) serves as a testing space for inserting tables. Data for tables will be stored in OpenScience/data folder.\nOne way to insert a table is using the Child option (where this file is the ‚ÄòParent‚Äô, and the code to create the table is in a separate ‚Äòchild‚Äô R or Rmd file).\nExample:\n{r bwTbl, child= ‚Äú../data/bwTbl.r‚Äù}\nResources for working with Tables in Quarto:\n\nQuarto Tables (quarto.org)\nQuarto Report with Dynamic Tables(video tutorial by Eli Holmes)"
  },
  {
    "objectID": "content/rmarkdown.html",
    "href": "content/rmarkdown.html",
    "title": "R Markdown",
    "section": "",
    "text": "You can include R Markdown files in your project."
  },
  {
    "objectID": "content/rmarkdown.html#r-markdown",
    "href": "content/rmarkdown.html#r-markdown",
    "title": "R Markdown",
    "section": "R Markdown",
    "text": "R Markdown\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00"
  },
  {
    "objectID": "content/rmarkdown.html#including-plots",
    "href": "content/rmarkdown.html#including-plots",
    "title": "R Markdown",
    "section": "Including Plots",
    "text": "Including Plots\nYou can also embed plots, for example:\n\n\n\n\n\n\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot."
  },
  {
    "objectID": "content/gettingStarted.html",
    "href": "content/gettingStarted.html",
    "title": "Getting Started",
    "section": "",
    "text": "Open Science is a movement to make scientific research (including publications, data, software) transparent and accessible so that knowledge is shared. Here we will provide steps to get started; in future sections we will provide additional details on specific tasks/projects\nEmbrace the Open Science Mindset! Learn more about this approach and why it matters at Openscapes.org and the Openscapes Approach Guide.",
    "crumbs": [
      "Lab Manual",
      "Getting Started"
    ]
  },
  {
    "objectID": "content/gettingStarted.html#getting-started-with-github-and-rstudio-projects",
    "href": "content/gettingStarted.html#getting-started-with-github-and-rstudio-projects",
    "title": "Getting Started",
    "section": "",
    "text": "Open Science is a movement to make scientific research (including publications, data, software) transparent and accessible so that knowledge is shared. Here we will provide steps to get started; in future sections we will provide additional details on specific tasks/projects\nEmbrace the Open Science Mindset! Learn more about this approach and why it matters at Openscapes.org and the Openscapes Approach Guide.",
    "crumbs": [
      "Lab Manual",
      "Getting Started"
    ]
  },
  {
    "objectID": "content/gettingStarted.html#add-software-tools",
    "href": "content/gettingStarted.html#add-software-tools",
    "title": "Getting Started",
    "section": "Add Software Tools",
    "text": "Add Software Tools\n\nGithub Desktop\nRStudio (v2022.07.2 build 576 or later)\nR\nCreate a Github Login",
    "crumbs": [
      "Lab Manual",
      "Getting Started"
    ]
  },
  {
    "objectID": "content/gettingStarted.html#create-a-new-repository-from-a-template",
    "href": "content/gettingStarted.html#create-a-new-repository-from-a-template",
    "title": "Getting Started",
    "section": "Create a NEW Repository from a template:",
    "text": "Create a NEW Repository from a template:\n\nGo to the Github Repository for the PAM Lab Manual Template\nClick on the ‚ÄòUse this template‚Äô button in the top right, select ‚ÄòCreate new repository‚Äô\n\nEdit repository settings\n\nSelect the ‚ÄòInclude all branches‚Äô option\nSelect your lab organization or yourself as the owner and set the repository name to ‚ÄòLab name Lab Manual‚Äô\nMake description ‚ÄúLab manual for ‚Äòinsert lab name and FMC‚Äô‚Äù\nMake the repo public\n\n\nClick create repository\nTurn on GitHub pages under Settings-&gt;Pages. You will set pages to be made from the gh-pages branch and root directory\n\nUpdate ‚ÄòActions‚Äô settings\n\nUnder Settings -&gt; Actions -&gt; General -&gt; Actions permissions select ‚ÄòAllow all actions and reusable workflows‚Äô. Select save\n\nUnder Settings -&gt; Actions -&gt; General -&gt; Workflow permissions select ‚ÄòRead and write permissions‚Äô\n\n\n\n\n\n\n\nNote: Both of these settings may already be selected but you have to click save for both\n\n\n\n\n\n\n\nReturn to the main page of the repo to edit your website\n\nClick on ‚ÄòCode‚Äô in the top left\nClick on the settings button next to the ‚ÄòAbout‚Äô section on the right side of the repository\nSelect ‚ÄòUse your GitHub Pages website‚Äô. This should autopopulate the website\nSelect ‚ÄòSave Changes‚Äô",
    "crumbs": [
      "Lab Manual",
      "Getting Started"
    ]
  },
  {
    "objectID": "content/gettingStarted.html#clone-repository-to-local-computer",
    "href": "content/gettingStarted.html#clone-repository-to-local-computer",
    "title": "Getting Started",
    "section": "Clone Repository to Local Computer",
    "text": "Clone Repository to Local Computer\nClone your Test Repository to your local computer using Github Desktop:\n\nFile -&gt; Clone Repository -&gt; URL\nCopy URL of your chosen Repository on Github, then save to your Documents -&gt; Github folder using the defaults. See Introduction to Git/Github tutorial for more help.",
    "crumbs": [
      "Lab Manual",
      "Getting Started"
    ]
  },
  {
    "objectID": "content/gettingStarted.html#create-a-new-rstudio-project",
    "href": "content/gettingStarted.html#create-a-new-rstudio-project",
    "title": "Getting Started",
    "section": "Create a New Rstudio Project",
    "text": "Create a New Rstudio Project\n\nCreate a new project in RStudio.\n\nOpen RStudio. In the upper right hand corner of RStudio, select ‚ÄòNew Project‚Äô in the drop-down menu to add a new R Project from an Existing Project.\n\nBrowse to find the appropriate folder in Documents-&gt; Github.\n\nModify the README.md file.\n\nIn the lower right section of RStudio, select ‚ÄòFiles‚Äô and you will see the README.md file, which appears on the home page on your Github repository site.\n\nOpen this file and edit using either Source Code or Visual Editor\n\n\nAdd the title of your repository (using # Title in Source Code or Heading 1 in Visual Editor)\nAdd text below the title describing the contents/purpose of this repository\nAdd the following Disclaimer and License (### Disclaimer if using Source Code):\nDisclaimer\nThis repository is a scientific product and is not official communication of the National Oceanic and Atmospheric Administration, or the United States Department of Commerce. All NOAA GitHub project content is provided on an ‚Äòas is‚Äô basis and the user assumes responsibility for its use. Any claims against the Department of Commerce or Department of Commerce bureaus stemming from the use of this GitHub project will be governed by all applicable Federal law. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply their endorsement, recommendation or favoring by the Department of Commerce. The Department of Commerce seal and logo, or the seal and logo of a DOC bureau, shall not be used in any manner to imply endorsement of any commercial product or activity by DOC or the United States Government.\nLicense\nThis content was created by U.S. Government employees as part of their official duties. This content is not subject to copyright in the United States (17 U.S.C. ¬ß105) and is in the public domain within the United States of America. Additionally, copyright is waived worldwide through the CC0 1.0 Universal public domain dedication.\n\n\nSave! This Readme will show up at the bottom of our Github Repository\n\nModify the index.qmd file (home page)\n\nOpen the index.qmd file\n\n\n\nModify using Source Editor to add a title and introductory text for the home page (for website). Title will need to be written in this format:\n\ntitle: ‚ÄúThis is my title‚Äù",
    "crumbs": [
      "Lab Manual",
      "Getting Started"
    ]
  },
  {
    "objectID": "content/gettingStarted.html#commit-push-to-github",
    "href": "content/gettingStarted.html#commit-push-to-github",
    "title": "Getting Started",
    "section": "Commit & Push to Github",
    "text": "Commit & Push to Github\n\nCommit & Push to Github.\n\nSave project in RStudio\nOpen your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary).\n\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\n\nCheck the updates on Github\n\nOpen your Github repository\nGo to Actions Tab- is it rendering? did it go through (green) or fail (red)?\n\nView the updated Github Repo ReadMe\nView the updated Website Homepage\n\nAdopt this process as your daily habit of working on your projects locally and saving your data to Github.",
    "crumbs": [
      "Lab Manual",
      "Getting Started"
    ]
  },
  {
    "objectID": "content/gettingStarted.html#additional-resources",
    "href": "content/gettingStarted.html#additional-resources",
    "title": "Getting Started",
    "section": "Additional Resources",
    "text": "Additional Resources\nIntroduction to Git/Github Tutorial (Eli Holmes, NMFS)\nGit for Humans (Alice Bartlett)\nHappy Git with R (Jenny Bryan)",
    "crumbs": [
      "Lab Manual",
      "Getting Started"
    ]
  },
  {
    "objectID": "content/issues.html",
    "href": "content/issues.html",
    "title": "Github Issues",
    "section": "",
    "text": "Github issues are a tool for tracking and planning work, tasks, ideas, and bugs in a Github Repository. You can also break down your work into sub-issues and browse the full hierarchy of work to be done. Issues can have labels and milestones, there can be one or more people assigned to an issue, and you can work with issues within projects. You can also create custom issues for repeated tasks.\nHere we will work with issues independently and within Projects to coordinate development of our Lab Manual.",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Issues"
    ]
  },
  {
    "objectID": "content/issues.html#create-issue-from-github-pages",
    "href": "content/issues.html#create-issue-from-github-pages",
    "title": "Github Issues",
    "section": "Create Issue from Github Pages",
    "text": "Create Issue from Github Pages\nOur lab manuals have been set up to allow for directly submitting an issue related to a specific web page. We will create an issue as an example.\n\nGo to the Open Science pages. At the top right, you will see ‚ÄòOn this page‚Äô, and below this you‚Äôll find a github symbol and ‚ÄòEdit this page‚Äô.\nSelect any page on this document, click on the ‚ÄòReport an Issue‚Äô at the top right, and suggest an edit. If you have a real suggestion, then add that suggestion! If you only want to do this as a test, then write ‚ÄúTEST‚Äù as your title. Assign the issue to Shannon Rankin, and give it a label. When you are finished, select the green ‚ÄúSubmit new issue‚Äù button at the bottom.",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Issues"
    ]
  },
  {
    "objectID": "content/issues.html#assign-tasks",
    "href": "content/issues.html#assign-tasks",
    "title": "Github Issues",
    "section": "Assign Tasks",
    "text": "Assign Tasks\nIssues are great ways to assign tasks to a specific repository.\nAs an example, we will ask a colleague to help with a component of our Lab Manual. In this example, we will request assistance with a Lithium Battery Safety Page, to go within our Lab Management chapter.\n\nGo to your Lab Manual github repository\nAt the top, click on ‚ÄúIssues‚Äù, then select the green New Issue Button (on the right)\nCreate a title (concise, but informative), such as ‚ÄúCreate Lithium Battery Safety info for Lab Manual‚Äù\nWrite a detailed description of the task/need, so that this task can be completed as desired. It might be helpful to use the checklist option, so that tasks can be checked as they are completed. Add assignees (yourself + whomever will be tasked with doing the work), and give the issue a label. Two examples are show, below:\n\n\n\n\n\n\n\n\n\nIf there are additional discussions, or if you need to identify additional people to do components of this task, you can reply to the original post and include relevant information.\nWhen the task is complete, you can reply with a comment regarding the completion of the task,and then click the ‚ÄúClose Issue‚Äù button.",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Issues"
    ]
  },
  {
    "objectID": "content/issues.html#custom-issue-forms-for-repeated-tasks",
    "href": "content/issues.html#custom-issue-forms-for-repeated-tasks",
    "title": "Github Issues",
    "section": "Custom Issue Forms for Repeated Tasks",
    "text": "Custom Issue Forms for Repeated Tasks\nCreating your own custom Issue Template is ideal for repeated tasks. In this example, we will create an Issue Template for people to submit information on Outreach (blog, newpaper article, presentation, etc).\n\nIn Github, navigate to the main page of the repository. Under your repository name, click the Settings. If you cannot see the ‚ÄúSettings‚Äù tab, select the ‚Ä¶ dropdown menu, then click Settings.\nIn the ‚ÄúFeatures‚Äù section, under Issues, click Set up templates. You may need to enable Issues and refresh the page before you can see the button.\nUse the Add Template dropdown menu, and click on the type of template you‚Äôd like to create (here we will select Feature Request, which we can modify by selecting the Preview and Edit button and select:\n\n\nTemplate Name: Add Outreach Element\nAbout: Add Outreach Element to Database (blog, media, presentation, etc)\nTemplate Content: Modify by entering:\n\nOutreach Title Title of article, presentation, etc.\nAuthors, Affiliation Add all Authors & the affiliation of the primary author. If media, include the newspaper, company, etc.\nDOI or Web-Link Add DOI or URL to the location of the element. If there is no online presence, then attach to this Issue Form.\nFull Citation Please provide a full citation in APA format (preferred).\nAdditional context Add any other context here (abstract, etc).\n\nAdd Assignee (can add yourself, others if appropriate)\nAdd Label. Right-click on Label and open in new tab. You can either create a new label, or modify an existing one. Here, I will modify the purple ‚Äúgood first issue‚Äù label by selecting the ‚Äòedit‚Äô button to the right, and change the Label Name to ‚Äúoutreach‚Äù, and the Description to ‚ÄúAdd outreach element‚Äù. Once you have created that, you can go back to your Issue Template and add your new Outreach label (it still may appear as it‚Äôs former label, but should come up correct!).\n\n\n\nAt the top of the Issue Template edit page, select the green button ‚ÄúPropose change‚Äù. Add a commit message, and then Select the Commit changes button at the bottom.\nTest use of this template. Go to repository, and select ‚ÄúIssues‚Äù. Select your new issue template, add relevant information, and then select ‚ÄúSubmit New Issue‚Äù.",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Issues"
    ]
  },
  {
    "objectID": "content/issues.html#issue-forms",
    "href": "content/issues.html#issue-forms",
    "title": "Github Issues",
    "section": "Issue Forms",
    "text": "Issue Forms\nIt is also possible to create custom issue forms, with dropdowns, checkboxes, etc. See Resources, below, for more information (we may build out a test example in the future), and find examples of form issues by Kourtney Burger here (click on ‚Äònew issue‚Äô to see forms).",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Issues"
    ]
  },
  {
    "objectID": "content/issues.html#resources",
    "href": "content/issues.html#resources",
    "title": "Github Issues",
    "section": "Resources",
    "text": "Resources\nCreating Custom Github Issues\nCreating GitHub Issue Templates- Eli Holmes\nCreate Github Issue Forms\nExample Github Issue Forms- Kourtney Burger- Click on ‚ÄòNew Issue‚Äô button to see forms.\nGithub Issue Template Cheat Sheet- Explanation and examples for creating yaml code for Custom Issue Forms.",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Issues"
    ]
  },
  {
    "objectID": "content/openscapes.html",
    "href": "content/openscapes.html",
    "title": "Openscapes",
    "section": "",
    "text": "Openscapes\n\n\n\n\n\nOpenscapes is an open source approach and movement, and Openscapes is also an organization that facilitates adopting an open science way of working. We have identified a number of common projects that can serve as Openscapes Journeys.\nBelow we identify Journeys in Openscapes that were developed for our NMFS PAM teams during the NMFS Openscapes Champions Program. These journeys are outlined in subsequent sections on this website.\n\nLab Manual - The first NMFS Openscapes PAM Team developed lab manuals that would feed into the National PAM Lab Manual. In Progress\nTeam Organization - As part of the IRA funded PAM-Strategic Initiative, we identified a series of national goals and created teams to advance projects to work towards these goals. This Journey outlines how to collaborate with teams on various projects. Stay Tuned!\nResearch Compendium - A research compendium is a comprehensive collection of all the digital components related to a research project, including data, code, and text (protocols, reports, metadata, etc). This journey serves as both a stand-alone and as a sub-component of the ‚ÄòTeam Organization‚Äô journey. Stay Tuned!",
    "crumbs": [
      "Co-Working",
      "Openscapes"
    ]
  },
  {
    "objectID": "content/acknowledgements.html",
    "href": "content/acknowledgements.html",
    "title": "Acknowledgments",
    "section": "",
    "text": "This repo and GitHub Action was based on the tutorial by Openscapes quarto-website-tutorial by Julia Lowndes and Stefanie Butland."
  },
  {
    "objectID": "content/gitProject.html",
    "href": "content/gitProject.html",
    "title": "Github Projects",
    "section": "",
    "text": "Github Projects are adaptable task-boards that integrate issues to help you track and plan your work. You can create and customize multiple views by filtering, sorting, grouping your issues, and you can visualize your work with configurable charts and add custom fields to track metadata specific to your team.",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Projects"
    ]
  },
  {
    "objectID": "content/gitProject.html#create-lab-manual-project-board",
    "href": "content/gitProject.html#create-lab-manual-project-board",
    "title": "Github Projects",
    "section": "Create Lab Manual Project Board",
    "text": "Create Lab Manual Project Board\nHere we will create a project board for our Lab Manuals, and use this to organize and track the development of our Lab Manuals. We will create an issue for each component of the Lab Manual, but here we will start with creating a few issues related to the ‚ÄúLab Management‚Äù section.\n\nOpen your Lab Manual Github Repository, and go to the ‚ÄúProjects‚Äù tab. Select ‚ÄúNew Project‚Äù\nSelect a template (we recommend ‚ÄúTeam Planning‚Äù to start), Give it a name (example: ‚ÄúSAEL Lab Manual‚Äù), and select ‚ÄúCreate Project‚Äù.\nCreate an example issue for a component of the lab manual. Under the ‚ÄúTodo‚Äù section (at the bottom), select ‚Äú+Add item‚Äù. Type ‚ÄúAdd Lab Mngmt-&gt;Inventory. This will now show up as a ‚Äòcard‚Äô under your Todo section.\nEdit on the new card you made by clicking on the name within the card. Click on ‚ÄúEdit‚Äù, and add information related to this issue (including any instructions as to the info you want to add, how it should be added, etc). When you are done, click ‚ÄúUpdate Comment‚Äù.Identify Assignees (on the right). Then select ‚ÄúConvert to Issue‚Äù at the bottom right. Choose the appropriate repository to link the Project page to (your Lab Manual).\n\n\n\nThe Task is now saved as an Issue within the Lab Manual Project Board. Select a label (documentation?) and close issue.",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Projects"
    ]
  },
  {
    "objectID": "content/gitProject.html#add-previous-issues-to-project-board",
    "href": "content/gitProject.html#add-previous-issues-to-project-board",
    "title": "Github Projects",
    "section": "Add Previous Issues to Project Board",
    "text": "Add Previous Issues to Project Board\nPreviously, we created an issue to Add a page on Lithium Battery Safety. Here we will add that issue to our Lab Manual Project Board.\n\nGo to your Lab Manual Github Repository, and navigate to the ‚ÄúIssues‚Äù tab. Navigate to the issue you created previously (‚ÄúCreate Lithium Battery Safety qmd for Lab Manual‚Äù).\nAt the right, select Projects, add to your new Lab Manual Project.",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Projects"
    ]
  },
  {
    "objectID": "content/gitProject.html#resources",
    "href": "content/gitProject.html#resources",
    "title": "Github Projects",
    "section": "Resources",
    "text": "Resources\nNMFS Open Science Github Project Boards (examples)",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration",
      "Github Projects"
    ]
  },
  {
    "objectID": "content/OpenScience_Presentations.html",
    "href": "content/OpenScience_Presentations.html",
    "title": "Presentations",
    "section": "",
    "text": "Presentations can be made in Quarto as three different slide formats including reveal.js (HTML), PowerPoint (MS Office), and Beamer (LaTeX/PDF)."
  },
  {
    "objectID": "content/OpenScience_Presentations.html#quarto-slides",
    "href": "content/OpenScience_Presentations.html#quarto-slides",
    "title": "Presentations",
    "section": "",
    "text": "Presentations can be made in Quarto as three different slide formats including reveal.js (HTML), PowerPoint (MS Office), and Beamer (LaTeX/PDF)."
  },
  {
    "objectID": "content/OpenScience_Presentations.html#html-slides-template",
    "href": "content/OpenScience_Presentations.html#html-slides-template",
    "title": "Presentations",
    "section": "HTML Slides Template",
    "text": "HTML Slides Template\nMethods Slides Template"
  },
  {
    "objectID": "content/createCompendium.html",
    "href": "content/createCompendium.html",
    "title": "Create Research Compendium",
    "section": "",
    "text": "Under Construction\nGoals: Create a template and present step by step instructions to create the compendium. May need alternatives based on primary output (NOAA report, website, etc)",
    "crumbs": [
      "Research Compendium",
      "Create Research Compendium"
    ]
  },
  {
    "objectID": "content/createCompendium.html#resources",
    "href": "content/createCompendium.html#resources",
    "title": "Create Research Compendium",
    "section": "Resources",
    "text": "Resources\nResearch Compendium Templates: * emdelponte Website Based {target=‚Äú_blank‚Äù} * rrrpkg- R package, and more info here rcompendium- R package",
    "crumbs": [
      "Research Compendium",
      "Create Research Compendium"
    ]
  },
  {
    "objectID": "content/resources.html",
    "href": "content/resources.html",
    "title": "Resources",
    "section": "",
    "text": "Resources for learning more about Open Science\n\nOpen Science\nOpenScapes- An organization to facilitate embracing the Open Science movement, including: resources, blog, and Openscapes Approach Guide (among other things).\nNMFS Open Science - Landing page for NMFS Open Science information and resources, including a Resource Book\nEasing into Open Science\n\n\nGithub\nNMFS Github Guide- Information, Best Practices, etc.\nIntro to Github- PSAW presentation by Eli Holmes\nGithub Strategies (Openscapes)\nGit for Humans¬†Intro to Github for non-coders\nInstalling GitHub Desktop will install a platform for interacting with GitHub and also Git.\n\nVideo 1. Setting GitHub Desktop Preferences (2.5 mins) https://youtu.be/0PVOPL6i3MQ\nVideo 2. Cloning a repository (2 mins) https://youtu.be/acIwQO1eOtw\nVideo 3. Pulling and pushing changes to GitHub (3.5 mins) https://youtu.be/cQgn3_w27_8\n\n\n\nQuarto\nVideo Tutorial: Beautiful reports and presentations with Quarto (RStudio). Link here.\nQuarto Keynote Presentation at RStudio Conference.\nQuarto Tutorial (Openscapes)\n\n\nR and Tidyverse\n‚ÄúYou shouldn‚Äôt feel ashamed about your code- if it solves the problem, it‚Äôs perfect just the way it is. But also, it could always be better‚Äù Hadley Wickham\nWhy Tidy Data?(Openscapes)\nNMFS R User Group\nBig Book of R\nHappy Git with R (Jenny Bryan)\nCoding Strategies (Openscapes)\nName things deliberately (see¬†3 Rules for Naming Things)",
    "crumbs": [
      "Resources"
    ]
  },
  {
    "objectID": "content/publishing.html",
    "href": "content/publishing.html",
    "title": "Publishing",
    "section": "",
    "text": "To get your Quarto webpage to show up with the url\nyou have a few steps."
  },
  {
    "objectID": "content/publishing.html#turn-on-github-pages-for-your-repo",
    "href": "content/publishing.html#turn-on-github-pages-for-your-repo",
    "title": "Publishing",
    "section": "Turn on GitHub Pages for your repo",
    "text": "Turn on GitHub Pages for your repo\n\nTurn on GitHub Pages under Settings &gt; Pages . You will set pages to be made from the gh-pages branch and the root directory.\nTurn on GitHub Actions under Settings &gt; Actions &gt; General\n\nThe GitHub Action will automatically recreate your website when you push to GitHub after you do the initial gh-pages set-up"
  },
  {
    "objectID": "content/publishing.html#do-your-first-publish-to-gh-pages",
    "href": "content/publishing.html#do-your-first-publish-to-gh-pages",
    "title": "Publishing",
    "section": "Do your first publish to gh-pages",
    "text": "Do your first publish to gh-pages\nThe first time you publish to gh-pages, you need to do so locally.\n\nOn your local computer, open a terminal window and cd to your repo directory. Here is what that cd command looks like for me. You command will look different because your local repo will be somewhere else on your computer.\n\ncd ~/Documents/GitHub/NOAA-quarto-simple\n\nPublish to the gh-pages. In the terminal type\n\nquarto publish gh-pages\nThis is going to render your webpage and then push the _site contents to the gh-pages branch."
  },
  {
    "objectID": "content/publishing.html#dont-like-using-gh-pages",
    "href": "content/publishing.html#dont-like-using-gh-pages",
    "title": "Publishing",
    "section": "Don‚Äôt like using gh-pages?",
    "text": "Don‚Äôt like using gh-pages?\nIn some cases, you don‚Äôt want your website on the gh-pages branch. For example, if you are creating releases and you want the website pages archived in that release, then you won‚Äôt want your website pages on the gh-pages branch.\nHere are the changes you need to make if you to avoid gh-pages branch.\n\nAt the top of _quarto.yml add the following:\n\nproject: \n  type: website\n  output-dir: docs\n\nOn GitHub under Settings &gt; Pages set pages to be made from the main branch and the docs directory.\nMake sure docs is not listed in .gitignore\nPublish the site the first time locally using quarto publish from the terminal\nChange the GitHub Action because you can‚Äôt use quarto publish gh-pages. You‚Äôll need to push to the main branch yourself (in the GitHub Action)\n\non:\n  push:\n    branches: main\n\nname: Render and Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    env:\n      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v2 \n        \n      - name: Set up R (needed for Rmd)\n        uses: r-lib/actions/setup-r@v2\n\n      - name: Install packages (needed for Rmd)\n        run: Rscript -e 'install.packages(c(\"rmarkdown\", \"knitr\", \"jsonlite\"))'\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n        with:\n          # To install LaTeX to build PDF book \n          # tinytex: true \n          # uncomment below and fill to pin a version\n          # version: 0.9.600\n      \n      - name: Render Quarto Project\n        uses: quarto-dev/quarto-actions/render@v2\n        with:\n          to: html\n\n      - name: Set up Git\n        run: |\n          git config --local user.email \"actions@github.com\"\n          git config --local user.name \"GitHub Actions\"\n\n      - name: Commit all changes and push\n        run: |\n          git add -A && git commit -m 'Build site' || echo \"No changes to commit\"\n          git push origin || echo \"No changes to commit\""
  },
  {
    "objectID": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step3.html",
    "href": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step3.html",
    "title": "3. Create Local Project",
    "section": "",
    "text": "Once you have been accepted as a member of the PAM-SI-Mtg-March2024 respository, clone to your local computer and create an RStudio project for local work.\n\nClone PAM-SI Meeting Repository to your local computer using Github Desktop:\n\nOpen Github Desktop on the computer you will be bringing to the workshop\nFile -&gt; Clone Repository -&gt; URL\nPaste in the URL for the PAM-SI Meeting Repo (https://github.com/SAEL-SWFSC/PAM-SI-Mtg-March2024). Save to your Documents -&gt; Github folder using the defaults. It is highly recommended that you save Github Repository/RStudio Projects to these default locations (and for these instructions, we assume you will!). See Introduction to Git/Github tutorial for more help.\n\nCreate/Open project in RStudio.\n\nOpen RStudio\nIn the upper right hand corner of RStudio, select ‚ÄòNew Project‚Äô in the drop-down menu\n\nAdd a new R Project from an Existing Directory. Browse to find the appropriate folder in Documents-&gt; Github. Note: Anytime you want to navigate to this project in RStudio, you can select it from the dropdown in this top right corner. If you want to use a new computer, you will need to repeat the steps of cloning the repository using Github Desktop, then creating a new project in RStudio."
  },
  {
    "objectID": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step1.html",
    "href": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step1.html",
    "title": "1. Load Software",
    "section": "",
    "text": "Add Software Tools to your computer:\n\nGithub Desktop\n\nSign User Agreement (see NOAA Github Governance Team for more information)\nSEFSC specific user agreement; NEFSC specific user agreement\n\nRStudio (v2022.07.2 build 576 or later)\nR\nZotero\nCreate a Github Account"
  },
  {
    "objectID": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step5.html",
    "href": "content/Mtg-Old/prep/PAM-SI-Mtg-Prep-step5.html",
    "title": "5. Github enterprise login",
    "section": "",
    "text": "If you have a Github Enterprise license there is one additional login step before you will be able to push or pull changes to and from Github.\n\nLogin to Github desktop through Github.com\n\nOpen Github desktop, navigate to ‚ÄúFile‚Äù, and select ‚ÄúOptions‚Äù\n\nSelect ‚ÄúSign into GitHub.com‚Äù and navigate to the browser window that is opened.\n\nSign into Github.com as usual and provide any two-step authentication required. Once you have logged in, you can close browser and continue with Github desktop."
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-IntroText.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-IntroText.html",
    "title": "Intro Text",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and edit intro file\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, select New Blank File -&gt; Quarto Doc, Name ‚ÄúIntro.qmd‚Äù\nOpen Intro.qmd and view using the Visual Editor\n\nAdd text to Intro.qmd\n\nNavigate to üìÅinfo folder and Open PAM SI Proposal Revised Sept 18, 2023.docx and PAM SI Vision Statement.docx\nCopy the ‚ÄòBackground‚Äô paragraph from the PAM SI Vision Statement.docx and paste into the Intro.qmd\nCopy the 2nd sentence from ‚ÄòProject Tasks & Key Activities‚Äô from the PAM SI Proposal Revised Sept 18, 2023.docx and paste as 2nd paragraph in Intro.qmd.\n\nFormat Intro.qmd\n\nPlace cursor at top of Intro.qmd page, and navigate to Visual Editor tool bar. Using the drop-down menu, change ‚ÄòNormal‚Äô to ‚ÄòHeader 1‚Äô.\nType ‚ÄòIntroduction‚Äô at top of page.\nInsert Picture below text by clicking on the picture icon on the toolbar.\n\nNavigate to the ‚Äòimages‚Äô folder in the repository and select ‚ÄòProposal-Intro-Fig.jpg‚Äô. Provide the following caption: ‚ÄúKey Activities Identified by the Passive Acoustic Monitoring Strategic Initiative‚Äù, and under ‚ÄòAttributes‚Äô ID section, put ‚ÄòIntro-diagram‚Äô.\n\n\nLink Intro.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/Intro.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Intro‚Äù and in details, state ‚ÄúAdded draft introduction text and diagram based on PAM-SI Vision and Proposal‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Cloud.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Cloud.html",
    "title": "Cloud Section",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and Edit File\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, click on box to left of ‚ÄúPAM-SI-Mtg-Exercises-template.qmd‚Äù\nClick on ‚öôÔ∏èMore dropdown, then select Copy and save as ‚ÄúPAM-SI-Mtg-Exercises-Cloud.qmd‚Äù\n\nInsert Table for Tools/Software/Detectors to consider\n\nInsert Table: In Visual Editor, select the Table dropdown menu to insert a table with 10 rows and 3 columns. Enter ‚ÄúList of Potential Tools/Software/Detectors to Consider for Cloud Computing‚Äô in the Caption.\nFill out the table with the preliminary list identified in the Template Workshop Report- PAM SI Workshop google document, under Cloud Computing Section (link here). Add more rows if necessary.\n\nModify document\n\nAt top, where it says ‚ÄòChapter Template‚Äô, replace with ‚ÄúCloud Computing and EDA/IT Needs‚Äù\nIn Project Team Table, add in names of Section Leads in the ‚ÄòName of Lead‚Äô cells (you can get the name of the section leads from the Agenda)\nSave the document\n\nLink PAM-SI-Mtg-Exercises-Cloud.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/PAM-SI-Mtg-Exercises-Cloud.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Cloud Section‚Äù and in details, state ‚ÄúAdded draft summary for Cloud Workshop Section‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-ListAttendees.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-ListAttendees.html",
    "title": "List Attendees",
    "section": "",
    "text": "Exercise: Insert List of Attendees Table for the Report.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate Attendees file\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, select New Blank File -&gt; Quarto Doc, Name ‚ÄúListAttendees.qmd‚Äù\nOpen ListAttendees.qmd and set to Visual Editor\n\n\n\n\nEdit Attendees file\n\nAdd Attendee Table to ListAttendees.qmd\n\nInsert Table: In Visual Editor, select the Table dropdown menu to insert a table with as many rows as there are attendees, and with 3 columns. Enter ‚ÄúList of Attendees‚Äô in the Caption.\nFill out the table with the names, Affiliations, and Emails for all attendees, like the example below. You can find this information in the ‚ÄòAttendeesIntros.qmd‚Äô file created during the pre-meeting preparation (PAM-SI-Mtg-March2024/AttendeesIntros.qmd) or on this google sheet.\n\n\n\n\n\n\n\n\nName\nAffiliation\nEmail\n\n\n\n\nShannon Rankin\nSouthwest Fisheries Science Center\nshannon.rankin@noaa.gov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFormat ListAttendees.qmd\n\nPlace cursor at top of ListAttendees.qmd page, and navigate to Visual Editor tool bar. Using the drop-down menu, change ‚ÄòNormal‚Äô to ‚ÄòHeader 1‚Äô.\nType ‚ÄòList of Attendees‚Äô at top of page.\n\n\n\nLink ListAttendees.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/ListAttendees.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\n\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd List of Attendees‚Äù and in details, state ‚ÄúAdded List of Attendees table for Meeting report‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-NCEI.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-NCEI.html",
    "title": "NCEI Section",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and edit intro file\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, click on box to left of ‚ÄúPAM-SI-Mtg-Exercises-template.qmd‚Äù\nClick on ‚öôÔ∏èMore dropdown, then select Copy and save as ‚ÄúPAM-SI-Mtg-Exercises-NCEI.qmd‚Äù\n\nInsert Table for PAM Projects/Data Sets intended to be provided to NCEI\n\nInsert Table: In Visual Editor, select the Table dropdown menu to insert a table with 11 rows and 6 columns. Enter ‚ÄúList of PAM Projects to be provided to NCEI‚Äô in the Caption.\nFill out the table with the preliminary list identified in the Template Workshop Report- PAM SI Workshop google document, under NCEI Archiving Section (link here). Add more rows if necessary.\n\nModify document\n\nAt top, where it says ‚ÄòChapter Template‚Äô, replace with ‚ÄúNCEI Archiving‚Äù\nIn Project Team Table, add in names of Section Leads in the ‚ÄòName of Lead‚Äô cells (you can get the name of the section leads from the Agenda)\nSave the document\n\nLink PAM-SI-Mtg-Exercises-NCEI.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/PAM-SI-Mtg-Exercises-NCEI.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Intro‚Äù and in details, state ‚ÄúAdded draft introduction text and diagram based on PAM-SI Vision and Proposal‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Management.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Management.html",
    "title": "Management Section",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and Edit File\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, click on box to left of ‚ÄúPAM-SI-Mtg-Exercises-template.qmd‚Äù\nClick on ‚öôÔ∏èMore dropdown, then select Copy and save as ‚ÄúPAM-SI-Mtg-Exercises-Management.qmd‚Äù\n\nModify document\n\nAt top, where it says ‚ÄòChapter Template‚Äô, replace with ‚ÄúManagement Outcomes and Tools‚Äù\nIn Project Team Table, add in names of Section Leads in the ‚ÄòName of Lead‚Äô cells (you can get the name of the section leads from the Agenda)\nSave the document\n\nLink PAM-SI-Mtg-Exercises-Management.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/PAM-SI-Mtg-Exercises-Management.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Management Section‚Äù and in details, state ‚ÄúAdded draft summary for Management Workshop Section‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-StockAssess.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-StockAssess.html",
    "title": "Stock Assessment Section",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and Edit File\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, click on box to left of ‚ÄúPAM-SI-Mtg-Exercises-template.qmd‚Äù\nClick on ‚öôÔ∏èMore dropdown, then select Copy and save as ‚ÄúPAM-SI-Mtg-Exercises-StockAssess.qmd‚Äù\n\nModify document\n\nAt top, where it says ‚ÄòChapter Template‚Äô, replace with ‚ÄúPAM Data Integration: Stock Assessments‚Äù\nIn Project Team Table, add in names of Section Leads in the ‚ÄòName of Lead‚Äô cells (you can get the name of the section leads from the Agenda)\nSave the document\n\nLink PAM-SI-Mtg-Exercises-StockAssess.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/PAM-SI-Mtg-Exercises-StockAssess.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd StockAssess Section‚Äù and in details, state ‚ÄúAdded draft summary for StockAssess Workshop Section‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Climate.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-Climate.html",
    "title": "Climate Section",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and Edit File\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, click on box to left of ‚ÄúPAM-SI-Mtg-Exercises-template.qmd‚Äù\nClick on ‚öôÔ∏èMore dropdown, then select Copy and save as ‚ÄúPAM-SI-Mtg-Exercises-Climate.qmd‚Äù\n\nModify document\n\nAt top, where it says ‚ÄòChapter Template‚Äô, replace with ‚ÄúClimate and Long Term Data Trends‚Äù\nIn Project Team Table, add in names of Section Leads in the ‚ÄòName of Lead‚Äô cells (you can get the name of the section leads from the Agenda)\nSave the document\n\nLink PAM-SI-Mtg-Exercises-Climate.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/PAM-SI-Mtg-Exercises-Climate.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd Climate Section‚Äù and in details, state ‚ÄúAdded draft summary for Climate Workshop Section‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-template.html",
    "href": "content/Mtg-Old/exercises/PAM-SI-Mtg-Exercises-template.html",
    "title": "Chapter Title",
    "section": "",
    "text": "Exercise: Insert preliminary text for the Report Introduction based on the PAM-SI Proposal.\n\nBefore you start‚Ä¶. do you have a local RStudio project for PAM-SI-Mtg-March2024? If not, follow instructions in Pre-Meeting Tasks here.\n\n\nCreate and Edit File\n\nOpen PAM-SI-Mtg-March2024 project in RStudio\nIn lower right hand corner, select ‚ÄòFiles‚Äô tab\nClick on the üìÅtext folder to open\nCreate a new quarto Document\n\nIn ‚ÄòFiles‚Äô tab, click on box to left of ‚ÄúPAM-SI-Mtg-Exercises-template.qmd‚Äù\nClick on ‚öôÔ∏èMore dropdown, then select Copy and save as ‚ÄúPAM-SI-Mtg-Exercises-XXXX.qmd‚Äù\n\nModify document\n\nAt top, where it says ‚ÄòChapter Template‚Äô, replace with ‚ÄúXXXX‚Äù\nIn Project Team Table, add in names of Section Leads in the ‚ÄòName of Lead‚Äô cells (you can get the name of the section leads from the Agenda)\nSave the document\n\nLink PAM-SI-Mtg-Exercises-XXXX.qmd to Report\n\nOpen the _quarto.yaml in the root directory and scroll down to the ‚Äòchapters‚Äô. Here you‚Äôll see a list of documents in the content folder that are serving as pages for the Report. Yaml documents are very fussy about specific formatting.\nPut the cursor after the index.qmd and hit ‚Äòenter‚Äô (this will increase the chances that your entry is properly aligned).\nIn this position, write ‚Äò- text/PAM-SI-Mtg-Exercises-XXXX.qmd‚Äô (be sure there is only one space between the - and the word ‚Äòcontent‚Äô)\n\nCommit & Push to Github\n\nOpen Github Desktop, and in top left corner, use drop-down menu to select ‚ÄòPAM-SI-Mtg-March2024‚Äô repository. Github desktop will identify the changes you made to the document.\nAt the bottom left, describe the modifications you made to the document, and then select ‚Äòcommit‚Äô. For example, you may want to write ‚ÄúAdd XXX Section‚Äù and in details, state ‚ÄúAdded draft summary for XXXX Workshop Section‚Äù.\nOnce the commit goes through‚Äì select ‚ÄòPush to Origin‚Äô at the top. This will push changes to your Github repository.\n\nOpen associated Github Issue here, and make sure you‚Äôve completed all tasks"
  },
  {
    "objectID": "content/Research-Guide.html",
    "href": "content/Research-Guide.html",
    "title": "Research Guide",
    "section": "",
    "text": "The purpose of this guide is to provide an approach to working on a research project that provides an efficient approach to collaborating with yourself (including your future self!) and other researchers. This guide follows our lab philosophy of Open and Reproducible Science.\n\nCreate a Github Repository for your research\n\nCreate Repository\nUse Github Desktop to clone to your local computer (store in Documents-&gt;Github)\nOpen project in RStudio (version 2022.07.2 build576 or later)\n\nCreate a draft manuscript to document your research (see Writing Guide in this lab manual).\nBe sure to document all changes to your research using the ‚Äòcommit‚Äô documentation. Be detailed. Consider doing smaller changes/commits to keep track of things.\nCreate a project board in Github to identify tasks in your project (to do, doing, done!). Retain these for future review.\nUse Issues to document discussions, modifications, and workflow. Link Issues to tasks in your Project Board.\nWhen you reach milestones in your work (say a draft for author review), create a Version in Github. This will help future you go back in time to a previous version of your work.\n\nThings to remember as you work:\n\nDocument everything! Assume you are documenting every detail for someone who is absolutely new to your work and needs to follow your methods exactly. Your future self will thank you!\n\nFor additional information:\nVideo Tutorial: Beautiful reports and presentations with Quarto (RStudio). Link here."
  },
  {
    "objectID": "content/Research-Guide.html#research-guide",
    "href": "content/Research-Guide.html#research-guide",
    "title": "Research Guide",
    "section": "",
    "text": "The purpose of this guide is to provide an approach to working on a research project that provides an efficient approach to collaborating with yourself (including your future self!) and other researchers. This guide follows our lab philosophy of Open and Reproducible Science.\n\nCreate a Github Repository for your research\n\nCreate Repository\nUse Github Desktop to clone to your local computer (store in Documents-&gt;Github)\nOpen project in RStudio (version 2022.07.2 build576 or later)\n\nCreate a draft manuscript to document your research (see Writing Guide in this lab manual).\nBe sure to document all changes to your research using the ‚Äòcommit‚Äô documentation. Be detailed. Consider doing smaller changes/commits to keep track of things.\nCreate a project board in Github to identify tasks in your project (to do, doing, done!). Retain these for future review.\nUse Issues to document discussions, modifications, and workflow. Link Issues to tasks in your Project Board.\nWhen you reach milestones in your work (say a draft for author review), create a Version in Github. This will help future you go back in time to a previous version of your work.\n\nThings to remember as you work:\n\nDocument everything! Assume you are documenting every detail for someone who is absolutely new to your work and needs to follow your methods exactly. Your future self will thank you!\n\nFor additional information:\nVideo Tutorial: Beautiful reports and presentations with Quarto (RStudio). Link here."
  },
  {
    "objectID": "content/gitCollaborate.html",
    "href": "content/gitCollaborate.html",
    "title": "Collaborate with Github",
    "section": "",
    "text": "Collaborate with Github\n\n\n\n\n\nGithub has a number of tools that facilitate collaboration, including:\n\nIssues- Github issues are a tool for tracking and planning work, tasks, ideas, and bugs in a Github Repository.\nProjects- Github Projects are adaptable task-boards to help track and plan work\nDiscussions- Github Discussions is a platform for collaborative communication forum",
    "crumbs": [
      "Lab Manual",
      "Github Collaboration"
    ]
  },
  {
    "objectID": "content/Zotero.html",
    "href": "content/Zotero.html",
    "title": "Zotero",
    "section": "",
    "text": "Zotero is an open-source online reference manager, where references can be readily saved from Google scholar using a browser plugin.",
    "crumbs": [
      "Sharing Knowledge",
      "Zotero"
    ]
  },
  {
    "objectID": "content/Zotero.html#getting-started",
    "href": "content/Zotero.html#getting-started",
    "title": "Zotero",
    "section": "Getting started",
    "text": "Getting started\n\nLoad Zotero and create a login\nDownload Zotero to your computer\nInstall Zotero Connector to create a browser plugin so that you can directly save google scholar citations to your online reference list\nLink Rstudio to your Zotero library",
    "crumbs": [
      "Sharing Knowledge",
      "Zotero"
    ]
  },
  {
    "objectID": "content/Zotero.html#adding-citations-to-zotero",
    "href": "content/Zotero.html#adding-citations-to-zotero",
    "title": "Zotero",
    "section": "Adding Citations to Zotero",
    "text": "Adding Citations to Zotero\n\nAdd via Google Scholar\n\nFind article on Google Scholar, click on double quotes at bottom of citation\nSelect ‚ÄòRefMan‚Äô and OK to save to Zotero\nAdd citation to the NMFS-PAM group\n\n\n\nAdd via Browser Plug-In\n\nOpen Zotero on your coputer\nGo to publication website\nClick on the Zotero browser icon (top right of browser) and save to selected Zotero folder",
    "crumbs": [
      "Sharing Knowledge",
      "Zotero"
    ]
  },
  {
    "objectID": "content/Zotero.html#zotero-group-libraries",
    "href": "content/Zotero.html#zotero-group-libraries",
    "title": "Zotero",
    "section": "Zotero Group Libraries",
    "text": "Zotero Group Libraries\nGroup libraries are a means of crowd-sourcing literature on specific topics. Here we suggest how to create a new group library, and how to join/participate in an existing group library.\n\nHow to Join Existing Group Libraray\nTo find an existing group library, you can search on Zotero.\nIf you are interested in Acoustics specific libraries, you can use the ‚Äòreference‚Äô tag within Bioacoustics Stack Exchange.\nClick the red ‚ÄòJoin‚Äô button to add the library to your account\n\n\nCreate a New Zotero Group Library\n\nOnce Zotero is installed on your computer and you have a Zotero account, navigate to the Zotero Groups and select ‚ÄúCreate New Group‚Äù\nIf you intend to make this a publicly accessible Zotero Group, select and save the following settings\n\nGroup Type = ‚ÄúPublic Open‚Äù\nLibrary Reading = ‚ÄúAnyone on the internet‚Äù\nLibrary Editing = ‚ÄúAny group members‚Äù\nFile Editing = ‚ÄúNo group file storage‚Äù\n\n\n\n\nShare Your Group Library\nPost in Bioacoustics Stack Exchange as a Question/Answer and tag as ‚Äòreference‚Äô (in addition to other relevant tags) so that this information is searchable on the web and accessible to the public.\n\nLog into Bioacoustics Stack Exchange or follow these instructions to create an account: join bioacoustics stack exchange\nPost a question (or have a colleague post a question), similar to the examples below, and be sure to select the tag ‚Äòreferences‚Äô and any additional tag references. You can either answer your own question, or work with a colleague such that one of you asks the question, and then the other answers the question. Be sure to accept the answer once posted.\nHere are two examples to follow: Soundscape Zotero Group Library and PAM-Glider Group Library",
    "crumbs": [
      "Sharing Knowledge",
      "Zotero"
    ]
  },
  {
    "objectID": "content/Zotero.html#zotero-and-rstudio",
    "href": "content/Zotero.html#zotero-and-rstudio",
    "title": "Zotero",
    "section": "Zotero and RStudio",
    "text": "Zotero and RStudio\nYou can integrate Zotero directly to your Quarto/RMarkdown document in RStudio, or to your Microsoft Word document. Here are some basics for using in Quarto/RMarkdown\n\nChoose CSL: Citation Style Language\nUse Zotero to download the csl file for the journal you want to use.\n\nGo to the Zotero Preferences menu (Zotero &gt; Preferences on Mac, Edit &gt; Preferences on PC)\nClick on the ‚ÄòCite‚Äô menu\nBelow the list of pre-installed styles, click the link for ‚ÄòGet additional styles‚Äô\nSearch for your desired style in the provided search field\nSelect the style you want to install\n\n\n\nAdd CSL to Your yaml\ntitle: \"My Document\" \nbibliography: references.bib \ncsl: nature.csl\n\n\nExport Zotero Library to Your R Project\n\nOpen Zotero and select a folder/library\nClick File &gt; Export Library‚Ä¶\nSelect Format &gt; BibText and save the *.bib file in your R project folder\n\n\n\nAdd Your References Into the Document\n\nInline Citation:\nCitations are inserted into your document using square brackets and are separated by semicolons. Each citation must have a key, composed of an ‚Äò@‚Äô symbol plus the citation identifier from the database. For example;\n[@wickham2015]\n\n\nBibliography:\nA list of works cited will be automatically generated and placed in the document if the style calls for it. You may insert divs such as this;\n### References\n\n\n\n\n\n\nFor more information, see Quarto Citations Guide and Zotero Citations",
    "crumbs": [
      "Sharing Knowledge",
      "Zotero"
    ]
  }
]